--Notes:
--------------------------------------------- 
/*
Wenger wanted to use current population --> load data from JSANZ schema into ctsi_research
New patients are to be added at every run
Existing patients are to stay and not be altered over time. Except update upcoming appointment
Assignments to intervention arm are based on clinic. The clinic-intervention_arm relationship is done only once
AD-POLST: does it need to be refreshed every time?
*/
/***********************************************************************************
    Create cohort table: only the first time, from then on, we just add new patients

*************************************************************************************/
  CREATE TABLE "XDR_ACP_COHORT" 
   (	"PAT_ID" VARCHAR2(18 BYTE), 
	"CURRENT_AGE" NUMBER,
    "PL_CANCER" NUMBER, 
	"PL_ESLD" NUMBER, 
	"PL_COPD" NUMBER, 
	"PL_COPD_SPO2" NUMBER, 
	"PL_CHF" NUMBER, 
	"PL_ESRD" NUMBER, 
	"PL_ALS" NUMBER, 
	"PL_CIRRHOSIS" NUMBER, 
	"CREATION_DATE" TIMESTAMP (6), 
    "UPDATE_DATE" TIMESTAMP (6), 
	"PL_COPD_SP02" NUMBER, 
	"PL_PERITONITIS" NUMBER, 
	"PL_HEPATORENAL" NUMBER, 
	"PL_BLEEDING" NUMBER, 
	"PL_ASCITES" NUMBER, 
	"PL_ENCEPHALOPATHY" NUMBER, 
	"PL_ESDL_DECOMPENSATION" NUMBER, 
	"DX_ALS" NUMBER, 
	"DX_CANCER" NUMBER, 
	"DX_CHF" NUMBER, 
    "DX_COPD" NUMBER, 
	"DX_ESRD" NUMBER, 
	"DX_CIRRHOSIS" NUMBER, 
    "DX_PERITONITIS" NUMBER, 
    "DX_ASCITES" NUMBER, 
    "DX_BLEEDING" NUMBER, 
    "DX_ENCEPHALOPATHY" NUMBER, 
    "DX_HEPATORENAL" NUMBER, 
    "DX_ESDL_DECOMPENSATION" NUMBER, 
	"NEPH_VISIT" NUMBER, 
	"ONC_VISIT" NUMBER, 
	"COPD_ADMIT" NUMBER, 
	"CHF_ADMIT" NUMBER, 
    "MELD" NUMBER, 
    "EF" NUMBER,
    "CHEMO" NUMBER, 
    "AD_POLST_THREE" NUMBER, 
    "AD_POLST_ALL" NUMBER,   
    "CANCER" NUMBER, 
	"ESLD" NUMBER, 
	"COPD" NUMBER, 
	"CHF" NUMBER, 
	"ESRD" NUMBER, 
    "ALS" NUMBER, 
    "AGE" NUMBER,
    "SELECTED" NUMBER,
    "NEXT_APPT_DATE" DATE,
    "NEXT_APPT_PROVIDER_ID" VARCHAR2(25),
    "NEXT_APPT_LOC_ID" VARCHAR2(25),
    "CLINIC_LAST_PCP" NUMBER,
    "CLINIC_MOST_VISITS" NUMBER,
    "CLINIC_LAST_VISIT" NUMBER,
    "CLINIC_ID"  NUMBER,
    "CUR_PCP_PROV_ID" VARCHAR(50),
    "RANDOMIZATION_ARM" NUMBER,
    "COORDINATOR_ID" VARCHAR2(250 BYTE),
    -- "APPOINTMENT_DATE" DATE,
    -- "APPOINTMENT_CSN" VARCHAR(50),
    "AD_ALL" NUMBER,
    "AD_THREE" NUMBER,
    "POLST_ALL" NUMBER,
    "POLST_THREE" NUMBER,
    "EXCLUDED" NUMBER,
    "EXCLUSION_DATE" TIMESTAMP (6), 
    "EXCLUSION_REASON" VARCHAR2(250 BYTE)
   );


/***********************************************************************************
    Create temp tables to hold drivers and reference codes use in the process

-- Primary Care Department driver
-- Diagnoses Codes driver
-- Final diagnoses codes driver (dx_id)
-- Patient vital status driver
-- Encoutner/appoitnment status driver
-- Chemotherapy CPT driver
-- Apporintment types driver
-- Clinic-Coordinator driver
-- AD/POLST docs driver
-- doc status driver
-- labs driver
*************************************************************************************/
/***********************************************************************************
    Load driver tables
*************************************************************************************/
-------------------------------------------
-- Primary Care Department driver
-------------------------------------------
CREATE GLOBAL TEMPORARY TABLE XDR_ACP_DEPT_DRV(DEPARTMENT_ID NUMBER, LOC_ID number)
ON COMMIT PRESERVE ROWS;

INSERT INTO XDR_ACP_DEPT_DRV
SELECT DISTINCT dep.DEPARTMENT_ID
            ,loc.loc_id
FROM clarity.CLARITY_DEP dep
left join clarity_loc    loc on dep.rev_loc_id = loc.loc_id
WHERE dep.DEPARTMENT_ID IN (
910314,
910310,
70085,
80366,
80039,
940035,
940043,
60155,
60156,
10511,
910227,
910228,
910230,
910231,
910177,
910178,
50541,
80273,
80279,
80114,
20511,
80169,
80179,
80044,
80382,
80329,
80049,
940012,
940013,
940015,
940016,
940017,
940018,
940019,
80087,
940038,
61026,
70001,
70009,
70003,
70005,
70006,
70007,
70008,
70010,
70011,
60678,
60679,
70079,
70032,
80168,
70034,
70035,
60152,
60153,
60159,
60160,
60161,
60162,
70080,
60167,
60170,
60173,
60175,
60176,
60177,
60178,
60180,
60181,
10009,
10014,
10030,
10031,
80399,
20560,
80000,
80368,
20570,
60079,
80337,
70186,
70190,
20561,
80379,
70232,
72005,
70210,
10501149,
80190,
80197,
60610,
60614,
60618,
60619,
60620,
60624,
60658,
60659,
60078,
60083,
10501190,
21200003,
21501001,
10501101,
80286,
80293,
60737,
60745,
70090,
70092,
70095,
20006,
20007,
20009,
70183,
70185,
80392,
20010,
70191,
20018,
80165,
20024,
80112,
80115,
70208,
70211,
70215,
70216,
80088,
80090,
30101101,
99102100,
70004,
80124,
80125,
80132,
80139,
80142,
80156,
80158,
80163,
80164,
80171,
60201,
80178,
72004,
72008,
80001,
80002,
80003,
80006,
80007,
80008,
80009,
80034,
80035,
80038,
80040,
80047,
80048,
80060,
80068
);
COMMIT;


/***********************************************************************************
    Script to run 
*************************************************************************************/


-------------------------------------------
-- Diagnoses Codes driver
-------------------------------------------
CREATE GLOBAL TEMPORARY TABLE XDR_ACP_DX_TEMP(ICD_CODE VARCHAR2(10 BYTE), DX_FLAG VARCHAR2(25 BYTE))
ON COMMIT PRESERVE ROWS;

INSERT INTO XDR_ACP_DX_TEMP VALUES('335.20','ALS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('G12.21','ALS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('789.5','ASCITES');
INSERT INTO XDR_ACP_DX_TEMP VALUES('R18.8','ASCITES');
INSERT INTO XDR_ACP_DX_TEMP VALUES('789.59','ASCITES');
INSERT INTO XDR_ACP_DX_TEMP VALUES('789.51','ASCITES');
INSERT INTO XDR_ACP_DX_TEMP VALUES('456.21','BLEEDING');
INSERT INTO XDR_ACP_DX_TEMP VALUES('456.2','BLEEDING');
INSERT INTO XDR_ACP_DX_TEMP VALUES('456.20','BLEEDING');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I85.01','BLEEDING');
INSERT INTO XDR_ACP_DX_TEMP VALUES('456.0','BLEEDING');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I85.10','BLEEDING');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I85.11','BLEEDING');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C15.3','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('150.5','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C16.1','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('151.9','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C25.2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('157.3','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C25.7','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('157.9','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('158.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('158.9','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('191.5','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('197','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('197.7','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C78.7','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C79.81','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C79.82','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('198.89','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('202.80','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('200.70','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C71.8','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('200.73','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('200.76','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C16.8','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('150.2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('150.9','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('151.2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('151.3','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C22.1','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('155.2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C71.6','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C71.9','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C78.00','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('197.1','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('197.5','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('198.4','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C79.52','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('198.7','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('199.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('201.50','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('205.00','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C48.8','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('J91.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C79.11','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('204.02','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('204.92','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C95.12','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('G96.12','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C85.29','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C25.8','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('151.4','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C16.2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('151.6','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C16.9','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('157.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('157.1','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C48.1','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('191','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C71.3','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('191.7','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C78.1','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('197.2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('198.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C79.19','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('198.2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C79.2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('198.3','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C79.60','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('201.40','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('201.70','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('349.2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C79.89','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C22.4','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('205.02','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('208.12','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C79.32','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C15.9','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C16.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C16.6','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('151.8','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C25.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('191.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C71.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('191.1','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C71.1','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('191.4','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('191.8','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('191.9','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('197.4','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C78.5','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('197.8','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('198.6','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('198.8','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('198.82','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C81.39','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C15.8','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('150.1','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C15.5','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('151.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C16.3','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C25.3','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C25.9','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('197.3','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('197.6','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C78.6','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C79.70','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C80.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C81.19','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('789.51','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C79.9','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('200.77','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C91.92','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C92.02','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C91.52','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C81.09','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C91.A2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('150','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C15.4','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('151.1','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('151.5','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('155.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C48.2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('191.3','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C71.4','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('198','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C79.31','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('198.5','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C79.51','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C81.49','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('R18.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('200.71','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('200.78','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C91.02','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C85.19','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('150.3','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('150.4','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('151','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C16.5','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C25.1','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('157.2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C48.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('158.8','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C71.2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C79.00','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C81.29','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('201.90','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C22.3','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C22.2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C81.99','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('200.72','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('200.75','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('511.81','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('204.12','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('205.12','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C91.12','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('150.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('150.8','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C16.4','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('155.1','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('157.8','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('191.2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C71.5','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('191.6','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C71.7','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('197.0','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C78.2','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C78.39','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C78.4','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C78.89','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('198.1','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C79.49','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('198.81','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C85.89','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('201.00','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C81.79','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('201.60','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('200.7','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('200.74','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C92.12','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C91.62','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('C71','CANCER');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.40','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I50.40','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('402.11','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('404.11','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('404.91','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.20','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I50.31','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I50.41','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('404.01','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('404.03','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('404.13','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.0','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I50.20','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.22','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.30','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('398.91','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('402.91','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I50.9','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I50.23','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.32','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I50.32','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I50.33','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.4','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.42','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.43','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('404.93','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.9','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.23','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I50.43','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I11.0','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I13.0','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I13.2','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I50.1','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.2','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.21','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I50.30','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.31','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.33','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('402.01','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I50.21','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.3','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.41','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I50.42','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I09.81','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('428.1','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('I50.22','CHF');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K70.41','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K70.4','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K70.1','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K73.2','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('571.6','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K74.3','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K74.5','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K70.31','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K70.11','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K74.4','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K75.4','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K74.69','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('572.2','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('571.5','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K73.0','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('571.40','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K74.60','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K73.8','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('571.49','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K73.9','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('571.4','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K70.0','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K70.3','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K70.9','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('571.1','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K70','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('571.0','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K70.10','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K70.30','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('571.41','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('571.42','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K70.40','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K70.2','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('571.2','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('571.3','CIRRHOSIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('493.20','COPD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('J43.9','COPD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('491.21','COPD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('491.2','COPD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('J44.9','COPD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('J44.1','COPD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('493.2','COPD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('496','COPD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('491.22','COPD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('J44.0','COPD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('493.21','COPD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('492.0','COPD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('491.20','COPD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('493.22','COPD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('J95.850','COPD_SPO2');
INSERT INTO XDR_ACP_DX_TEMP VALUES('Z99.1','COPD_SPO2');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V46.11','COPD_SPO2');
INSERT INTO XDR_ACP_DX_TEMP VALUES('Z99.12','COPD_SPO2');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V46.13','COPD_SPO2');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V46.14','COPD_SPO2');
INSERT INTO XDR_ACP_DX_TEMP VALUES('Z99.81','COPD_SPO2');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V46.12','COPD_SPO2');
INSERT INTO XDR_ACP_DX_TEMP VALUES('Z99.11','COPD_SPO2');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V46.1','COPD_SPO2');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K72.90','ENCEPHALOPATHY');
INSERT INTO XDR_ACP_DX_TEMP VALUES('572.2','ENCEPHALOPATHY');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K72.91','ENCEPHALOPATHY');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V42.0','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('585.6','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V45.12','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('Z49.01','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('Z49.02','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V56.31','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V45.11','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V56.8','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V56','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V56.2','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('Z49.32','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('N18.5','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('Z99.2','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V45.1','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V56.0','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V56.1','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V56.3','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('Z49.31','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('V56.32','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('Z94.0','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('585.5','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('N18.6','ESRD');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K76.7','HEPATORENAL');
INSERT INTO XDR_ACP_DX_TEMP VALUES('572.4','HEPATORENAL');
INSERT INTO XDR_ACP_DX_TEMP VALUES('332.0','PARKINSONS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('G20','PARKINSONS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K65.4','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K65.1','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('567.82','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('567.89','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('567.8','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('567.21','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K65.2','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K65.9','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('567.22','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K65.8','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('567.2','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('567.29','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K67','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('567.0','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('K65.0','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('567.81','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('567.9','PERITONITIS');
INSERT INTO XDR_ACP_DX_TEMP VALUES('567.23','PERITONITIS');
COMMIT;


-------------------------------------------
-- Final diagnoses codes driver (dx_id)
-------------------------------------------
CREATE GLOBAL TEMPORARY TABLE XDR_ACP_DX_LOOKUP(DX_ID NUMBER, ICD_CODE VARCHAR2(10 BYTE), DX_FLAG VARCHAR2(25 BYTE))
ON COMMIT PRESERVE ROWS;
create index XDR_ACP_DX_LOOKUP_id_dx_id on XDR_ACP_DX_LOOKUP(dx_id);
INSERT INTO XDR_ACP_DX_LOOKUP
select edg.dx_id
,drv.*
from XDR_ACP_DX_TEMP      drv
join edg_current_icd9           edg on drv.icd_CODE = edg.CODE 
UNION
select edg.dx_id
,drv.*
from XDR_ACP_DX_TEMP      drv
join edg_current_icd10           edg on drv.icd_CODE = edg.CODE 
;
COMMIT;

-------------------------------------------
-- Patient vital status driver
-------------------------------------------
CREATE GLOBAL TEMPORARY TABLE XDR_ACP_PAT_STATUS(PAT_FLAG_TYPE_C NUMBER)
ON COMMIT PRESERVE ROWS;
INSERT INTO XDR_ACP_PAT_STATUS VALUES(6);COMMIT;
INSERT INTO XDR_ACP_PAT_STATUS VALUES(8);COMMIT;
INSERT INTO XDR_ACP_PAT_STATUS VALUES(9);COMMIT;
INSERT INTO XDR_ACP_PAT_STATUS VALUES(1018);COMMIT;
INSERT INTO XDR_ACP_PAT_STATUS VALUES(1053);COMMIT;


-------------------------------------------
-- Encoutner/appointnment status driver
-------------------------------------------
CREATE GLOBAL TEMPORARY TABLE XDR_ACP_APPT_STATUS(appt_status_c NUMBER, appt_cat VARCHAR2(25 BYTE))
ON COMMIT PRESERVE ROWS;
INSERT INTO XDR_ACP_APPT_STATUS VALUES(1,'include');COMMIT;
INSERT INTO XDR_ACP_APPT_STATUS VALUES(3,'exclude');COMMIT;
INSERT INTO XDR_ACP_APPT_STATUS VALUES(4,'exclude');COMMIT;
INSERT INTO XDR_ACP_APPT_STATUS VALUES(5,'exclude');COMMIT;

-------------------------------------------
-- Chemotherapy CPT driver
-------------------------------------------
CREATE GLOBAL TEMPORARY TABLE XDR_ACP_CHEMO_CPT(CPT_CODE VARCHAR2(25 BYTE))
ON COMMIT PRESERVE ROWS;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96401);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96402);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96405);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96406);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96409);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96411);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96413);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96415);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96416);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96417);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96423);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96420);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96422);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96425);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96440);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96446);COMMIT;
INSERT INTO XDR_ACP_CHEMO_CPT VALUES(96450);COMMIT;

-------------------------------------------
-- Apporintment types driver
-------------------------------------------
CREATE GLOBAL TEMPORARY TABLE XDR_ACP_APPT_TYPE(PRC_ID VARCHAR2(50 BYTE)) ON COMMIT PRESERVE ROWS;

INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('2001');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('2009');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('2000');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4640');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4639');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('2858');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4641');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4653');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4945');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4642');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4201');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('1002');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4644');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4271');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('3499');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('2014');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4652');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('2848');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4655');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4657');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4848');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4654');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4626');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4605');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('3509');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('2857');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4210');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4270');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('3826');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4599');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4645');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4272');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4849');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4628');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4625');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4630');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4481');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4627');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4209');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('2015');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4280');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('2214');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('2850');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4704');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4281');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4699');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4700');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4701');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('2856');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4631');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4273');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('2855');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4702');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4482');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('5053');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('2851');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('4359');COMMIT;
INSERT INTO XDR_ACP_APPT_TYPE(PRC_ID) VALUES('3476');COMMIT;


-------------------------------------------
-- Clinic-Coordinator driver
-------------------------------------------
-- DROP TABLE  XDR_ACP_CLINICS PURGE;
-------------------------------------------
CREATE GLOBAL TEMPORARY TABLE XDR_ACP_CLINICS(	"LOC_ID" NUMBER(18,0), 
	"COORDINATOR_ID" VARCHAR2(128 BYTE)
   ) ON COMMIT PRESERVE ROWS;

   
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(7083,'MORRISSEY, KIRA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(7000,'TAGAYUN, MARIE');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(8082,'SPENCER BAEZ, RAYMOND');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(8006,'LEGASPI, SHEILA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(1675,'RAMIREZ, SHARON');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(6016,'KAUR, HARMANDEEP');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(6017,'MEDINA, ARMANDO');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(7084,'LOPEZ, CLAUDIA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(8182,'AISPURO, VANESSA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(7025,'VALENCIA, APRIL');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(7083,'KAUR, HARMANDEEP');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(8084,'SPENCER BAEZ, RAYMOND');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(6000,'BASCOS, ELAINE');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(7014,'AISPURO, VANESSA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(7023,'FERNANDEZ, THEA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(8151,'FERNANDEZ, THEA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(1846,'GARCIA, EVELYN');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(6017,'CRAIGEN, SENITA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(1847,'LEGASPI, SHEILA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(6017,'KWAN, ERIC');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(8008,'AISPURO, VANESSA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(7021,'AISPURO, VANESSA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(7024,'LUA, PATRICIA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(6017,'NOEL, KEVIN');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(7011,'LANDAVERDE, LISETTE');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(7008,'LUA, PATRICIA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(8010,'LOPEZ, CLAUDIA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(7007,'TROTTER, ALDOUS');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(8002,'SANDOVAL, JESSICA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(8022,'SPENCER BAEZ, RAYMOND');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(7046,'RODRIGUEZ, DARLENE');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(7000,'KAUR, HARMANDEEP');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(6020,'CRAIGEN, SENITA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(6004,'MEDINA, ARMANDO');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(8000,'TROTTER, ALDOUS');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(2455,'AISPURO, VANESSA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(8092,'GARCIA, EVELYN');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(6016,'MORRISSEY, KIRA');COMMIT;
INSERT INTO XDR_ACP_CLINICS (LOC_ID,COORDINATOR_ID) VALUES(6002,'BASCOS, ELAINE');COMMIT;


--------------------------------------
--AD-POLST
--------------------------------------
CREATE GLOBAL TEMPORARY TABLE XDR_ACP_ADPOLST("DOC_INFO_TYPE_C" VARCHAR2(10)
,"DOC_GROUP" VARCHAR2(10)
   ) ON COMMIT PRESERVE ROWS;

INSERT INTO XDR_ACP_ADPOLST VALUES('11','AD');COMMIT;        --	Power of Attorney
INSERT INTO XDR_ACP_ADPOLST VALUES('300052','AD');COMMIT;	--Advance Directive Enduring
INSERT INTO XDR_ACP_ADPOLST VALUES('10','AD');COMMIT;	    --Advance Directives and Living Will
INSERT INTO XDR_ACP_ADPOLST VALUES('200068','POLST');COMMIT;	--DNR (Do Not Resuscitate) Documentation
INSERT INTO XDR_ACP_ADPOLST VALUES('300058','POLST');COMMIT;	---POLST



CREATE GLOBAL TEMPORARY TABLE XDR_ACP_RECORD_STATE("RECORD_STATE_C" NUMBER) ON COMMIT PRESERVE ROWS;
INSERT INTO XDR_ACP_RECORD_STATE(RECORD_STATE_C)
VALUES(2);
COMMIT;

--------------------------------------
--create driver for doc status
--------------------------------------

CREATE GLOBAL TEMPORARY TABLE XDR_ACP_DOC_STATUS("DOC_STAT_C" NUMBER) ON COMMIT PRESERVE ROWS;
INSERT INTO XDR_ACP_DOC_STATUS 
SELECT DOC_STAT_C
FROM ZC_DOC_STAT
WHERE DOC_STAT_C = 35;       --35 - Error
COMMIT;


--------------------------------------
--create driver for LABS
--------------------------------------
  CREATE GLOBAL TEMPORARY TABLE "CTSI_RESEARCH"."XDR_ACP_LAB_DRV" 
   (	"PROC_ID" NUMBER, 
	"COMPONENT_ID" NUMBER, 
	"LAB_CATEGORY" VARCHAR2(25 BYTE),
    "LOINC_CODE" VARCHAR2(50 BYTE)
   ) ON COMMIT PRESERVE ROWS ;

INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 10020051, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327246, 12344, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64588, 3000546, 'ALBUMIN', '30000-4');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 10010067, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(63243, 3000558, 'ALBUMIN', '13980-8');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(678, 12418, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(678, 10010264, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64643, 10000551, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 10010148, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(83974, 10010070, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(721807, 12344, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35263, 10000551, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 10020019, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(878, 10010781, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90248, 10020059, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35261, 3000506, 'CREATININE', '33558-8');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(886, 10010067, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64650, 3001330, 'CREATININE', '2161-8');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35249, 3001330, 'CREATININE', '2161-8');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64611, 10000551, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35261, 3005214, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(76139, 10010898, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35195, 3001330, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725882, 12418, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725695, 10010148, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(109390, 10010898, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(109498, 10010269, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(44945, 10010068, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 12313, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(88991, 10000139, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90196, 3003777, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(721223, 10001346, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725942, 12312, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725882, 12344, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(721306, 8011409, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(98219, 10010159, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(76139, 10010070, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(88991, 10010898, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35261, 10000547, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35315, 10001348, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(41789, 10012733, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(3594, 10000138, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(103331, 3003922, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(44027, 10000551, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(738, 10010067, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90152, 3001397, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(721328, 10010147, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(165000000, 12292, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(16500000, 12378, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303949, 10010268, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(304776, 10000353, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(2647, 10010266, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(88991, 10010264, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303671, 10010177, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303925, 10010266, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(1600, 3004916, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90248, 3002115, 'BILIRUBIN', '1977-8');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(680, 3000362, 'SODIUM', '2947-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(245333, 3000378, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(98223, 3000387, 'BILIRUBIN', '1975-2');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(1002, 3000468, 'ALBUMIN', '1747-5');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(1012, 3000464, 'BILIRUBIN', '1974-5');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 10020050, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(748, 3000387, 'BILIRUBIN', '1975-2');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(780, 3000378, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64739, 10010068, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327246, 12378, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(1750, 10001157, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(678, 10010898, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64716, 3001475, 'CREATININE', '2162-6');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 10010070, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90140, 3000578, 'ALBUMIN', '1754-1');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 10010149, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 12313, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(678, 10000549, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(304770, 10001157, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(778, 3000456, 'CREATININE', '12190-5');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35337, 3003777, 'CREATININE', '2162-6');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64611, 10010266, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90142, 3001478, 'CREATININE', '2162-6');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64650, 3001469, 'CREATININE', '3124-5');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(718411, 10000318, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327261, 12378, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35241, 3001330, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90172, 3001330, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(680, 10001991, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(76139, 10010159, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303923, 10010069, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(16500000, 12418, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303949, 10011123, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(892, 10001991, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303923, 10010801, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(304864, 10011575, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(88991, 10001991, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(2126, 12292, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(984, 10000319, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(102923, 3001330, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(304888, 10000140, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303729, 10010150, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(1600, 8001010, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(102923, 3003777, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(721217, 10000549, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(57423, 3004397, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(109390, 10010264, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35351, 3003777, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90196, 3001330, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(752, 10000319, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303669, 10010268, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(722366, 3003799, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(680, 10010898, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35199, 3003777, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(752, 3000389, 'BILIRUBIN', '15152-2');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(892, 3000362, 'SODIUM', '2947-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327246, 12418, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 10020018, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(98221, 3000378, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327246, 12292, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(721807, 12418, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 10000322, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 10000139, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64611, 3000507, 'CREATININE', '2162-6');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64611, 3000508, 'CREATININE', '20624-3');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(103151, 3001476, 'CREATININE', '2162-6');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(83974, 10010150, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(780, 10000549, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35337, 3001330, 'CREATININE', '2161-8');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35373, 10010900, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64588, 10000551, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35199, 3001478, 'CREATININE', '2162-6');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35361, 10010069, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(88991, 10010067, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303923, 10010266, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(245307, 3003748, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(16500000, 12344, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(984, 10000322, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(16500000, 12311, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(23163, 10000140, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35195, 3001477, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35291, 10000552, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(892, 10020050, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303669, 10010177, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(724384, 8001010, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(85478, 10000319, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35241, 3003777, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725683, 10010898, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35315, 10012733, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35389, 3001478, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(2126, 12344, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35261, 3004847, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(2126, 12378, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(680, 10020050, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64716, 10000551, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(165000000, 12313, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35331, 10010268, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(165000000, 12418, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(56264, 10000138, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 3000384, 'ALBUMIN', '1751-7');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64588, 3000476, 'CREATININE', '2161-8');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(878, 3000614, 'ALBUMIN', '14338-8');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 3000387, 'BILIRUBIN', '1975-2');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64643, 3000476, 'CREATININE', '2161-8');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 10020000, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(98223, 3000389, 'BILIRUBIN', '15152-2');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(63243, 3000563, 'ALBUMIN', '1751-7');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64588, 10010640, 'CREATININE', '9318-7');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 10010067, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 10000353, 'CREATININE', '3097-3');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 10000139, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64820, 3004074, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(1804, 10000318, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327238, 12378, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35373, 10001992, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64716, 10010268, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(83974, 10010264, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(678, 10001991, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(89251, 3000465, 'BILIRUBIN', '29210-2');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35375, 3000489, 'SODIUM', '2956-1');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64643, 10010268, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64643, 10010801, 'CREATININE', '13801-6');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(304758, 10000323, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725882, 12292, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(10274, 1511105, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327261, 12292, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725683, 10010150, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(2647, 10010069, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(984, 10000321, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(76139, 10010264, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(84070, 10010067, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35261, 10000550, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(88991, 10000353, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725789, 10010269, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(738, 10000139, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(724384, 3004916, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35261, 10000549, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303679, 10010269, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327250, 12344, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(98219, 10010898, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35375, 3005220, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90282, 3002195, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35361, 3000570, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(4962, 10010268, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90202, 3001476, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327250, 12418, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(84130, 10010899, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(109506, 10010268, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(98223, 3005513, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303729, 10010148, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303661, 10010264, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(738, 3000384, 'ALBUMIN', '1751-7');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 3000384, 'ALBUMIN', '1751-7');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35263, 3000476, 'CREATININE', '2161-8');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(678, 10010159, 'CREATININE', '3097-3');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(678, 3000362, 'SODIUM', '2947-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64588, 3000578, 'ALBUMIN', '1754-1');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(1750, 10010540, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(686, 3000362, 'SODIUM', '2947-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 10010159, 'CREATININE', '3097-3');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64611, 3005194, 'CREATININE', '2162-6');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(752, 10020019, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(98221, 3000384, 'ALBUMIN', '1751-7');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 10000322, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(721807, 12313, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725866, 12344, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(1804, 10010147, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(247602, 12378, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327238, 12313, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 10020051, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327246, 12311, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303991, 10010147, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35249, 3003777, 'CREATININE', '2162-6');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(305100, 10001991, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90194, 3001475, 'CREATININE', '2162-6');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35361, 10000140, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(84130, 10011123, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64444, 3000578, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725683, 10010159, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(305064, 10000323, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90196, 10000552, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725683, 10010067, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(43991, 10000138, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(892, 10010898, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(16500000, 12292, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725765, 10010540, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(76139, 10010150, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327261, 12540, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327261, 12540, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725898, 12311, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725898, 12313, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35271, 3000415, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(305116, 10000318, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(165000000, 12344, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(88991, 10000549, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35203, 10010269, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303729, 10010149, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(165000000, 12378, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35375, 10001992, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303665, 10010268, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303665, 10010177, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90176, 3001330, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303949, 10010900, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(1042, 3000452, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(107496, 10000138, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(1750, 3000122, 'INR', '6301-6');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35361, 3000571, 'ALBUMIN', '13986-5');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(686, 3000378, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(678, 3000378, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 10010150, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(98221, 3000362, 'SODIUM', '2947-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64588, 10010639, 'ALBUMIN', '1754-1');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90140, 3000547, 'ALBUMIN', '14956-7');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 10000319, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(678, 10020018, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(678, 10000353, 'CREATININE', '3097-3');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 10020000, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(738, 12292, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327238, 12292, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90196, 3001367, 'CREATININE', '2161-8');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(103339, 3003927, 'ALBUMIN', '1747-5');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35261, 3000512, 'CREATININE', '2164-2');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(721973, 10010150, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(305100, 10000353, 'CREATININE', '3097-3');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725866, 12418, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(752, 10010148, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303989, 10010147, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90148, 3001330, 'CREATININE', '2161-8');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64611, 10000550, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35361, 10010801, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(305064, 10010149, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(2126, 12311, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(98219, 10010264, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35195, 3003777, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(1804, 12312, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(748, 10020051, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(10274, 1511118, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(43967, 10001991, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(44947, 10010067, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(2126, 13269, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35361, 10010268, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725683, 10010070, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(1620, 3003794, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90202, 10010269, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(107576, 10020100, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(2126, 12313, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35315, 10010266, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327250, 12292, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(60938, 10010264, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64611, 3005214, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35261, 10000551, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(109494, 10010268, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90152, 3001396, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35199, 3001330, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35297, 3001478, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(1620, 1553372, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 12344, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(42237, 10012831, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35197, 3001330, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(305064, 10000320, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90172, 3001361, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 12311, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725695, 10000320, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 3000362, 'SODIUM', '2947-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 3000378, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 10010264, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64588, 3000546, 'CREATININE', '30000-4');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 10010898, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35373, 3000472, 'SODIUM', '2955-3');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64588, 10010640, 'ALBUMIN', '9318-7');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35375, 3000490, 'SODIUM', '21525-1');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 10000549, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(1750, 10020029, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 10010150, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327246, 12313, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35263, 10010268, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(88078, 3004056, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64588, 10010268, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64588, 10001346, 'ALBUMIN', '14957-5');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35261, 3000508, 'CREATININE', '20624-3');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(678, 12344, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(98221, 3000387, 'BILIRUBIN', '1975-2');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35261, 3000507, 'CREATININE', '2162-6');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327238, 12418, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(88078, 3001261, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(780, 10010264, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(83974, 10010898, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(83974, 10010067, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(886, 10000138, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(88078, 3004005, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(85478, 10000322, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(84130, 10010266, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(305064, 10010150, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35269, 3001382, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725882, 12313, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35197, 3003777, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(16500000, 12313, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(85478, 10000139, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327256, 12344, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(210306, 8011409, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 12292, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725789, 10011277, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303925, 10010801, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(748, 10000322, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(304776, 10000549, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90194, 10010268, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327261, 12344, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(56565, 10010147, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(721985, 10010067, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(41801, 10010070, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(56565, 10000318, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 12418, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(748, 10010150, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35351, 3001330, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(41801, 10010067, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(738, 10020000, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35315, 10001346, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35261, 10010265, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303661, 10010159, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303991, 10000318, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(718411, 10001157, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 3005513, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35261, 10010264, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35311, 10000552, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327261, 12418, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327238, 12311, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725789, 10011278, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35261, 10010266, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725898, 12292, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(88991, 10010159, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(22961, 3000476, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(21415, 3000476, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(305064, 10010148, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(98223, 3000384, 'ALBUMIN', '1751-7');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 3000389, 'BILIRUBIN', '15152-2');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(688, 3000387, 'BILIRUBIN', '1975-2');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(686, 3000384, 'ALBUMIN', '1751-7');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 10010070, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(682, 10001991, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(678, 10020050, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64716, 3001330, 'CREATININE', '2161-8');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(304672, 10000318, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(721807, 12378, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(721807, 12292, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(305100, 10000549, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(721973, 10000322, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327238, 12344, 'CREATININE', '2160-0');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(63464, 3004461, 'ALBUMIN', '6942-7');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(1752, 3004475, 'INR', '6301-6');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(63464, 3000571, 'ALBUMIN', '13986-5');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(83974, 10010159, 'CREATININE', '3097-3');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(303671, 10010266, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(721263, 10010269, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725922, 12378, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(76139, 10010067, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(304758, 10010150, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(109390, 10010159, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(90308, 3000434, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(725683, 10010264, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327261, 12313, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327252, 12378, 'INR', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35375, 10010899, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(2126, 12418, 'SODIUM', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(102923, 10010269, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(2647, 10010801, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(88078, 3005203, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(878, 10001819, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64575, 10000551, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327250, 12311, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(780, 10020018, 'CREATININE', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35227, 10000140, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(64444, 10010639, 'ALBUMIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(327250, 12313, 'BILIRUBIN', '');COMMIT;
INSERT INTO XDR_ACP_LAB_DRV(PROC_ID, COMPONENT_ID, LAB_CATEGORY, LOINC_CODE)VALUES(35249, 10010269, 'CREATININE', '');COMMIT;

--------------------------------------
--create driver for LABS
--------------------------------------
  CREATE GLOBAL TEMPORARY TABLE "CTSI_RESEARCH"."XDR_ACP_RANDOMIZATION" 
   (	"LOC_ID" NUMBER, 
	"ARM" NUMBER
   ) ON COMMIT PRESERVE ROWS ;

INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(8000,1);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(8182,1);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(1891,1);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(1930,3);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(1890,2);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(1892,3);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(1887,2);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(8002,1);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(8006,3);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(8008,1);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(4545,2);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(4750,2);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(8150,3);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(8010,2);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(8022,1);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(1847,3);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(8085,2);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(1675,3);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(7008,2);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(7023,1);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(7024,2);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(7011,1);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(7046,2);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(7000,3);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(7059,3);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(7025,2);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(7007,2);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(7021,1);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(7084,2);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(8151,1);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(8084,1);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(8092,2);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(1846,2);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(8184,1);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(8082,1);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(2455,2);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(6017,3);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(6016,1);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(6004,3);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(6000,3);COMMIT;
INSERT INTO XDR_ACP_RANDOMIZATION(LOC_ID,ARM) VALUES(6002,3);COMMIT;

--------------------------------------
-- Create denominator
--------------------------------------
exec P_ACP_CREATE_DENOMINATOR('XDR_ACP_COHORT','XDR_ACP_DEPT_DRV','XDR_ACP_APPT_STATUS');

--------------------------------------
--remove excluded patients
--------------------------------------
exec P_ACP_REMOVE_DECEASED('XDR_ACP_COHORT');
exec P_ACP_REMOVE_RESTRICTED('XDR_ACP_COHORT','XDR_ACP_PAT_STATUS');

--------------------------------------
--flag excluded patients
--------------------------------------
exec P_ACP_EXCLUDE_DECEASED('XDR_ACP_COHORT');
exec P_ACP_EXCLUDE_RESTRICTED('XDR_ACP_COHORT','XDR_ACP_PAT_STATUS');


--------------------------------------
--apply problem list dx criterion
--------------------------------------
CREATE GLOBAL TEMPORARY TABLE XDR_ACP_PL_DX("PAT_ID" VARCHAR2(18 BYTE),
"DX_FLAG" VARCHAR2(25 BYTE)
) ON COMMIT PRESERVE ROWS;
create index XDR_ACP_PL_DX_id_patdx_flag on XDR_ACP_PL_DX(pat_id,DX_FLAG);

exec P_ACP_PL_DX_TBL('XDR_ACP_PL_DX', 'XDR_ACP_COHORT', 'XDR_ACP_DX_LOOKUP');

exec P_ACP_PL_DX('XDR_ACP_COHORT','XDR_ACP_PL_DX','CANCER');
exec P_ACP_PL_DX('XDR_ACP_COHORT','XDR_ACP_PL_DX','CHF');
exec P_ACP_PL_DX('XDR_ACP_COHORT','XDR_ACP_PL_DX','ALS');
exec P_ACP_PL_DX('XDR_ACP_COHORT','XDR_ACP_PL_DX','COPD');
exec P_ACP_PL_DX('XDR_ACP_COHORT','XDR_ACP_PL_DX','COPD_SPO2');
exec P_ACP_PL_DX('XDR_ACP_COHORT','XDR_ACP_PL_DX','CIRRHOSIS');
exec P_ACP_PL_DX('XDR_ACP_COHORT','XDR_ACP_PL_DX','ESRD');
exec P_ACP_PL_DX('XDR_ACP_COHORT','XDR_ACP_PL_DX','PERITONITIS');
exec P_ACP_PL_DX('XDR_ACP_COHORT','XDR_ACP_PL_DX','HEPATORENAL');
exec P_ACP_PL_DX('XDR_ACP_COHORT','XDR_ACP_PL_DX','BLEEDING');
exec P_ACP_PL_DX('XDR_ACP_COHORT','XDR_ACP_PL_DX','ASCITES');
exec P_ACP_PL_DX('XDR_ACP_COHORT','XDR_ACP_PL_DX','ENCEPHALOPATHY');
exec P_ACP_PL_ESDL_DECOMPENSATION('XDR_ACP_COHORT');

--------------------------------------
--apply encounter dx criterion (3 years)
--------------------------------------
CREATE GLOBAL TEMPORARY TABLE XDR_ACP_ENC_DX("PAT_ID" VARCHAR2(18 BYTE),
"DX_FLAG" VARCHAR2(25 BYTE)
) ON COMMIT PRESERVE ROWS;

create index XDR_ACP_ENC_DX_id_patdx_flag on XDR_ACP_ENC_DX(pat_id,DX_FLAG);

exec P_ACP_ENC_DX_TBL('XDR_ACP_ENC_DX'  , 'XDR_ACP_COHORT', 'XDR_ACP_DX_LOOKUP', 3)
exec P_ACP_ENC_DX('XDR_ACP_COHORT','XDR_ACP_ENC_DX','CANCER');
exec P_ACP_ENC_DX('XDR_ACP_COHORT','XDR_ACP_ENC_DX','CHF');
exec P_ACP_ENC_DX('XDR_ACP_COHORT','XDR_ACP_ENC_DX','ALS');
exec P_ACP_ENC_DX('XDR_ACP_COHORT','XDR_ACP_ENC_DX','CIRRHOSIS');
exec P_ACP_ENC_DX('XDR_ACP_COHORT','XDR_ACP_ENC_DX','ESRD');
exec P_ACP_ENC_DX('XDR_ACP_COHORT','XDR_ACP_ENC_DX','PERITONITIS');
exec P_ACP_ENC_DX('XDR_ACP_COHORT','XDR_ACP_ENC_DX','ASCITES');
exec P_ACP_ENC_DX('XDR_ACP_COHORT','XDR_ACP_ENC_DX','BLEEDING');
exec P_ACP_ENC_DX('XDR_ACP_COHORT','XDR_ACP_ENC_DX','ENCEPHALOPATHY');
exec P_ACP_ENC_DX('XDR_ACP_COHORT','XDR_ACP_ENC_DX','HEPATORENAL');
EXEC P_ACP_DX_ESDL_DECOMPENSATION('XDR_ACP_COHORT');


--------------------------------------
--Remove patients without PL for DX
--------------------------------------
EXEC P_ACP_REMOVE_NON_DX('XDR_ACP_COHORT');
--------------------------------------
--apply visit to departments criterion (oncology and nephrology)
--------------------------------------
exec P_ACP_DEPT_VISIT_ONC('XDR_ACP_COHORT','ONCOLOGY',1,'CANCER');
exec P_ACP_DEPT_VISIT_NEPH('XDR_ACP_COHORT','NEPH',1,'ESRD');

--------------------------------------
--apply admision for certain conditions (CHF AND COPD)
--------------------------------------
exec P_ACP_DEPT_ADMIT('XDR_ACP_COHORT','XDR_ACP_DX_LOOKUP',1,'CHF');
exec P_ACP_DEPT_ADMIT('XDR_ACP_COHORT','XDR_ACP_DX_LOOKUP',1,'COPD');

--------------------------------------
--chemotherapy
--------------------------------------
exec P_ACP_CHEMO_PROC('XDR_ACP_COHORT','XDR_ACP_CHEMO_CPT',2);
exec P_ACP_CHEMO_MEDS('XDR_ACP_COHORT','CHEMO',2);

--------------------------------------
-- MELD
--------------------------------------
-- DROP TABLE XDR_ACP_LAB PURGE;
CREATE GLOBAL TEMPORARY TABLE XDR_ACP_LAB(
    PAT_ID VARCHAR2(18 BYTE), 
	PAT_ENC_CSN_ID NUMBER(18,0), 
	PROC_CODE VARCHAR2(91 BYTE), 
	COMPONENT_ID NUMBER(18,0), 
	RESULT_TIME DATE, 
	LAB_FLAG VARCHAR2(50 BYTE),
	HARM_NUM_VAL NUMBER
    ) 
 ON COMMIT PRESERVE ROWS;
exec P_ACP_LAB_PULL('XDR_ACP_LAB','XDR_ACP_COHORT','XDR_ACP_LAB_DRV',3);
-- DROP TABLE XDR_ACP_MELD_TABLE PURGE;
CREATE GLOBAL TEMPORARY TABLE XDR_ACP_MELD_TABLE ("PAT_ID" VARCHAR2(18 BYTE)
       ,"ALBUMIN" NUMBER
       ,"ALBUMIN_RESULT_TIME" DATE
       ,"BILIRUBIN" NUMBER
       ,"BILIRUBIN_RESULT_TIME" DATE
       ,"CREATININE" NUMBER
       ,"CREATININE_RESULT_TIME" DATE
       ,"INR" NUMBER
       ,"INR_RESULT_TIME" DATE
       ,"LATEST_LAB" DATE
       ,"SODIUM" NUMBER
       ,"SODIUM_RESULT_TIME" DATE
   ) 
ON COMMIT PRESERVE ROWS;

exec P_ACP_LAB_MELD_TABLE('XDR_ACP_LAB','XDR_ACP_MELD_TABLE');
exec P_ACP_MELD('XDR_ACP_COHORT','XDR_ACP_MELD_TABLE')

--------------------------------------
-- EJECTION FRACTION
--------------------------------------
CREATE GLOBAL TEMPORARY TABLE XDR_ACP_NARR (	"PAT_ID" VARCHAR2(18 BYTE), 
	"ACC_NUM" VARCHAR2(254 BYTE), 
	"ORDER_PROC_ID" NUMBER(18,0) NOT NULL ENABLE, 
	"NARR_LINE" NUMBER(38,0) NOT NULL ENABLE, 
	"NARR_NARRATIVE" VARCHAR2(4000 BYTE), 
	"ORDER_TIME" DATE, 
	"ORD_VALUE" VARCHAR2(254 BYTE)
   ) ON COMMIT PRESERVE ROWS;
   
exec P_ACP_EF_NARR('XDR_ACP_NARR','XDR_ACP_COHORT',3);
EXEC P_ACP_EF_FLAG('XDR_ACP_COHORT','XDR_ACP_NARR');
--------------------------------------
-- Merge criterion
--------------------------------------
exec P_ACP_MERGE_CRITERION('XDR_ACP_COHORT');

--------------------------------------
-- Age criteria
--------------------------------------
exec P_ACP_AGE_CRTIERIA('XDR_ACP_COHORT','75');

--------------------------------------
--remove not selected patients
--------------------------------------
exec P_ACP_REMOVE_NOT_SELECTED('XDR_ACP_COHORT');

--------------------------------------
--AD-POLST
--------------------------------------
exec P_ACP_ADPOLST('XDR_ACP_COHORT', 'XDR_ACP_ADPOLST', 'XDR_ACP_RECORD_STATE', 'XDR_ACP_DOC_STATUS');

--------------------------------------
--CCC and clinic assignment
--------------------------------------
exec P_ACP_LOC_LAST_PCP('XDR_ACP_COHORT', 'XDR_ACP_DEPT_DRV', 'XDR_ACP_APPT_TYPE', 'XDR_ACP_APPT_STATUS');
exec P_ACP_LOC_MOST_VISITS('XDR_ACP_COHORT', 'XDR_ACP_DEPT_DRV', 'XDR_ACP_APPT_TYPE', 'XDR_ACP_APPT_STATUS');

exec P_ACP_LOC_LAST_VISIT('XDR_ACP_COHORT', 'XDR_ACP_DEPT_DRV', 'XDR_ACP_APPT_TYPE', 'XDR_ACP_APPT_STATUS');

exec P_ACP_CLINIC('XDR_ACP_COHORT');
exec P_ACP_COORDINATOR('XDR_ACP_COHORT','XDR_ACP_CLINICS');

--------------------------------------
-- randomization
--------------------------------------
exec P_ACP_INTERVENTION_ASSIGNMENT('XDR_ACP_COHORT', 'XDR_ACP_RANDOMIZATION')

--------------------------------------
--upcoming PC appointment 
--------------------------------------
-- exec P_ACP_APPOINTMENT('XDR_ACP_COHORT', 'XDR_ACP_DEPT_DRV', 'XDR_ACP_APPT_TYPE', 'XDR_ACP_APPT_STATUS');

--------------------------------------
--drop temp tables
--------------------------------------
exec p_acp_clean_up('XDR_ACP_DEPT_DRV');
exec p_acp_clean_up('XDR_ACP_DX_TEMP');
exec p_acp_clean_up('XDR_ACP_DX_LOOKUP');
exec p_acp_clean_up('XDR_ACP_PAT_STATUS');
exec p_acp_clean_up('XDR_ACP_CHEMO_CPT');

exec p_acp_clean_up('XDR_ACP_LAB');
exec p_acp_clean_up('XDR_ACP_MELD_TABLE');
exec p_acp_clean_up('XDR_ACP_NARR');
exec p_acp_clean_up('XDR_ACP_CLINICS');
exec p_acp_clean_up('XDR_ACP_APPT_TYPE');
exec p_acp_clean_up('XDR_ACP_APPT_STATUS');
exec p_acp_clean_up('XDR_ACP_ADPOLST');
exec p_acp_clean_up('XDR_ACP_RECORD_STATE');
exec p_acp_clean_up('XDR_ACP_DOC_STATUS');
exec p_acp_clean_up('XDR_ACP_PL_DX');
exec p_acp_clean_up('XDR_ACP_ENC_DX');
exec p_acp_clean_up('XDR_ACP_LAB_DRV');





/***********************************************************************************
    Stored Procedures
*************************************************************************************/
--------------------------------------
-- Create denominator
--------------------------------------
create or replace procedure p_acp_create_denominator(p_cohort_table in varchar2, p_dept_driver_table in varchar2, p_appt_driver_table in varchar2)  as
 q1 varchar2(4000);
begin

 q1 := 'INSERT INTO ' || p_cohort_table  || '(PAT_ID,current_age, CREATION_DATE,CUR_PCP_PROV_ID)  
        SELECT DISTINCT x.pat_id
                    ,FLOOR(MONTHS_BETWEEN(TRUNC(sysdate),TRUNC(pat.BIRTH_DATE))/12) AS CURRENT_AGE
            ,SYSDATE AS CREATION_DATE
            ,pat.CUR_PCP_PROV_ID
        FROM (SELECT enc.pat_id
                    ,PAT.BIRTH_DATE
            ,count(enc.pat_enc_csn_id) AS pat_enc_count
        FROM clarity.pat_enc                        enc
        JOIN clarity.patient                        pat   ON enc.pat_id = pat.pat_id
        LEFT JOIN ' || p_cohort_table || '  coh   ON pat.pat_id = coh.pat_id and coh.pat_id IS NULL
        JOIN clarity.clarity_ser                    prov2 ON pat.cur_pcp_prov_id = prov2.PROV_ID  
                                                    AND prov2.user_id IS NOT NULL
        JOIN ' || p_dept_driver_table || '      dd on enc.department_id = dd.department_id
        WHERE 
                enc.effective_date_dt between sysdate - 366 and sysdate 
                and TRUNC(months_between(TRUNC(sysdate), pat.birth_date)/12) >= 18
                and enc.enc_type_c = 101
                and (enc.appt_status_c is not null and enc.appt_status_c not in (SELECT APPT_STATUS_C
                                                                                FROM ' || p_appt_driver_table || '
                                                                                WHERE appt_cat = ''exclude'')
                    ) 
                GROUP BY enc.PAT_ID,
                    PAT.BIRTH_DATE)x
        JOIN clarity.patient                        pat   ON x.pat_id = pat.pat_id
        WHERE x.pat_enc_count > 1';
 EXECUTE IMMEDIATE q1;
end;

--------------------------------------
--remove excluded patients (DECEASED)
--------------------------------------
create or replace procedure p_acp_remove_deceased(p_cohort_table in varchar2) as
 q1 varchar2(4000);
begin

 q1 := 'DELETE FROM ' || p_cohort_table  ||
        ' WHERE 
            SELECTED IS NULL
            AND pat_id IN 
            (SELECT DISTINCT coh.PAT_ID 
            FROM ' || p_cohort_table  || '     coh 
            JOIN patient            pat on coh.pat_id = pat.pat_id 
            WHERE 
                i2b2.f_death(pat.pat_id,2,1)  = ''Known Deceased''
            )';
 EXECUTE IMMEDIATE q1;
end;

--------------------------------------
--Exclude deceased patients already in the cohort
--------------------------------------
create or replace procedure p_acp_exclude_deceased(p_cohort_table in varchar2) as
 q1 varchar2(4000);
begin
q1 :=  'MERGE INTO ' || p_cohort_table ||' coh 
 USING ( 
SELECT DISTINCT coh.PAT_ID 
            FROM ' || p_cohort_table  || '     coh 
            JOIN patient            pat on coh.pat_id = pat.pat_id 
            WHERE 
                i2b2.f_death(pat.pat_id,2,1)  = ''Known Deceased'' 
                and coh.SELECTED = 1 
                and coh.EXCLUDED IS NULL 
 ) R
 ON(COH.PAT_ID = R.PAT_ID) 
 WHEN MATCHED THEN 
 UPDATE SET  
 coh.EXCLUDED = 1
 ,coh.EXCLUSION_DATE = SYSDATE
 ,coh.UPDATE_DATE = SYSDATE
 ,coh.EXCLUSION_REASON = ''patient deceased''
' ;

 EXECUTE IMMEDIATE q1;
end;
--------------------------------------
--remove RESTRICTED patients 
--------------------------------------
create or replace procedure p_acp_remove_restricted(p_cohort_table in varchar2, p_driver_table in varchar2) as
 q1 varchar2(4000);
begin
 q1 := 'UPDATE ' || p_cohort_table  ||
        ' WHERE 
            SELECT pat_id IN 
            (
                SELECT coh.pat_id  
                FROM ' || p_cohort_table ||'                   coh 
                JOIN patient_fyi_flags           flags ON coh.pat_id = flags.patient_id 
                JOIN ' || p_driver_table || '     st   on flags.PAT_FLAG_TYPE_C = st.PAT_FLAG_TYPE_C 
                UNION 
                SELECT coh.pat_id  
                FROM ' || p_cohort_table ||'                   coh 
                LEFT JOIN patient_3                         ON coh.pat_id = patient_3.pat_id 
                WHERE 
                    patient_3.is_test_pat_yn = ''Y'' 
            )';
 EXECUTE IMMEDIATE q1;
end;

--------------------------------------
--Exclude RESTRICTED patients already in the cohort
--------------------------------------
create or replace procedure p_acp_exclude_restricted(p_cohort_table in varchar2, p_driver_table in varchar2) as
 q1 varchar2(4000);
begin
q1 :=  'MERGE INTO ' || p_cohort_table ||' coh 
 USING ( 
SELECT coh.pat_id  
                FROM ' || p_cohort_table ||'                   coh 
                JOIN patient_fyi_flags           flags ON coh.pat_id = flags.patient_id 
                JOIN ' || p_driver_table || '     st   on flags.PAT_FLAG_TYPE_C = st.PAT_FLAG_TYPE_C 
                UNION 
                SELECT coh.pat_id  
                FROM ' || p_cohort_table ||'                   coh 
                LEFT JOIN patient_3                         ON coh.pat_id = patient_3.pat_id 
                WHERE 
                    patient_3.is_test_pat_yn = ''Y''
                and coh.SELECTED = 1
                and coh.EXCLUDED IS NULL
 ) R
 ON(COH.PAT_ID = R.PAT_ID) 
 WHEN MATCHED THEN 
 UPDATE SET  
 coh.EXCLUDED = 1
 ,coh.EXCLUSION_DATE = SYSDATE
 ,coh.UPDATE_DATE = SYSDATE
 ,coh.EXCLUSION_REASON = ''patient restricted''
' ;

 EXECUTE IMMEDIATE q1;
end;

--------------------------------------
--populate table with PL matching DX driver
--------------------------------------
create or replace procedure P_ACP_PL_DX_TBL(p_table_name  in varchar2, p_cohort_table in varchar2, p_driver_table in varchar2) as
 q1 varchar2(4000);
begin
 q1 := 'INSERT INTO ' || p_table_name || ' 
                SELECT coh.pat_id, drv.dx_flag 
                FROM ' || p_cohort_table  || '          coh  
                JOIN problem_list                     pl    ON coh.pat_id = pl.pat_id AND pl.rec_archived_yn = ''N'' 
                JOIN zc_problem_status                zps   ON pl.problem_status_c = zps.problem_status_c 
                JOIN ' || p_driver_table ||'   drv   ON pl.dx_id = drv.dx_id
  where  
        zps.name = ''Active''';
 EXECUTE IMMEDIATE q1;
end;



--------------------------------------
--apply problem list dx criterion
--------------------------------------
create or replace procedure P_ACP_PL_DX(p_cohort_table in varchar2, p_table_name in varchar2, p_dx_flag in varchar2) as
 q1 varchar2(4000);
begin
 q1 := 'UPDATE ' || p_cohort_table  || 
  ' SET PL_' || p_dx_flag || ' = 1 
  WHERE 
    SELECTED IS NULL 
    AND PAT_ID IN ( 
                SELECT DISTINCT pat_id 
                FROM ' || p_table_name  || '          
               WHERE dx_flag = ''' || p_dx_flag || ''' 
               )';
 EXECUTE IMMEDIATE q1;
end;

--------------------------------------
--apply problem list dx criteria for ESDL decompensation combination
--------------------------------------
create or replace procedure P_ACP_PL_ESDL_DECOMPENSATION(p_cohort_table in varchar2) as
 q1 varchar2(4000);
begin

 q1 := '
  UPDATE ' || p_cohort_table  || 
  ' SET pl_ESDL_decompensation = 1 
  WHERE  
        SELECTED IS NULL
        AND (PL_PERITONITIS = 1 
        OR PL_ASCITES = 1 
        OR PL_BLEEDING = 1 
        OR PL_ENCEPHALOPATHY = 1 
        OR PL_HEPATORENAL = 1 
        OR PL_PERITONITIS = 1)';
 EXECUTE IMMEDIATE q1;
end;



--------------------------------------
--remove patients without any diagnosis related to the criteria
--------------------------------------
create or replace procedure p_acp_remove_non_dx(p_cohort_table in varchar2) as
 q1 varchar2(4000);
begin

 q1 := 'DELETE FROM ' || p_cohort_table  ||
        ' WHERE 
            SELECTED IS NULL
            AND pat_id IN 
            (SELECT DISTINCT coh.PAT_ID 
            FROM ' || p_cohort_table  || '     coh 
            WHERE 
                PL_ALS IS NULL
                AND PL_CANCER IS NULL
                AND PL_CHF IS NULL
                AND PL_CIRRHOSIS IS NULL
                AND PL_COPD IS NULL
                AND PL_COPD_SPO2 IS NULL
                AMD PL_ESLD IS NULL
                AND PL_ESDL_decompensation IS NULL               
                AND PL_ESRD IS NULL
                AND DX_ALS IS NULL               
                AND DX_CANCER IS NULL
                AND DX_CHF IS NULL
                AND DX_CIRRHOSIS IS NULL
                AND DX_COPD IS NULL
                AND DX_COPD_SPO2 IS NULL
                AND DX_ESLD IS NULL
                AND DX_ESDL_DECOMPENSATION IS NULL
                AND DX_ESRD IS NULL
                AND DX_ESRD IS NULL
            )';
 EXECUTE IMMEDIATE q1;
end;



--------------------------------------
--populate table with ENC matching DX driver
--------------------------------------
create or replace procedure P_ACP_ENC_DX_TBL(p_table_name  in varchar2, p_cohort_table in varchar2, p_driver_table in varchar2, p_timeframe in number) as
 q1 varchar2(4000);
begin
 q1 := 'INSERT INTO ' || p_table_name || ' 
                SELECT coh.pat_id, drv.dx_flag
                FROM ' || p_cohort_table  || '          coh 
                JOIN pat_enc_dx                     dx on coh.pat_id = dx.pat_id 
                JOIN ' || p_driver_table ||'    drv   ON dx.dx_id = drv.dx_id 
                left join pat_enc                   enc on dx.pat_enc_csn_id = enc.pat_enc_csn_id 
                WHERE 
                    coh.SELECTED IS NULL
                    AND dx.CONTACT_DATE between sysdate - (365.25 * ' || p_timeframe || ') and sysdate 
                    AND enc.enc_type_c = 101';
 EXECUTE IMMEDIATE q1;
end;



--------------------------------------
--apply encounter dx criterion (3 years)
--------------------------------------
create or replace procedure P_ACP_ENC_DX(p_cohort_table in varchar2, p_dx_table in varchar2, p_dx_flag in varchar2) as
 q1 varchar2(4000);
begin

 q1 := 'UPDATE ' || p_cohort_table  || ' 
  SET DX_' || p_dx_flag || ' = 1 
  WHERE 
    SELECTED IS NULL 
    AND PAT_ID IN ( 
                SELECT DISTINCT dx.pat_id 
                FROM ' || p_dx_table ||'    dx    
                WHERE dx.dx_flag = ''' || p_dx_flag || ''' )';
EXECUTE IMMEDIATE q1;
end;

--------------------------------------
--apply problem list dx criteria for ESDL decompensation combination
--------------------------------------
create or replace procedure P_ACP_DX_ESDL_DECOMPENSATION(p_cohort_table in varchar2) as
 q1 varchar2(4000);
begin

 q1 := '
  UPDATE ' || p_cohort_table  || 
  ' SET DX_ESDL_decompensation = 1 
  WHERE  
        SELECTED IS NULL
        AND (DX_PERITONITIS = 1 
        OR DX_ASCITES = 1 
        OR DX_BLEEDING = 1 
        OR DX_ENCEPHALOPATHY = 1 
        OR DX_HEPATORENAL = 1 
        OR DX_PERITONITIS = 1)';
 EXECUTE IMMEDIATE q1;
end;


--------------------------------------
--apply visit to departments criterion (oncology and nephrology)
--------------------------------------
create or replace procedure P_ACP_DEPT_VISIT_ONC(p_cohort_table in varchar2, p_dept in varchar2, p_years in number, p_criteria in varchar2) as
 q1 varchar2(4000);
begin
 q1 := 'UPDATE ' || p_cohort_table  || ' 
  SET ' || p_dept || '_VISIT = 1  
  WHERE  
    SELECTED IS NULL
    AND PAT_ID IN ( 
                SELECT DISTINCT  coh.PAT_ID 
FROM ' || p_cohort_table  || '          coh 
JOIN clarity.PAT_ENC                            enc on coh.pat_id = enc.pat_id 
LEFT JOIN clarity.CLARITY_DEP                   dep ON enc.department_id = dep.department_id 
LEFT JOIN clarity.v_cube_d_provider             prv ON enc.visit_prov_id = prv.provider_id 
WHERE 
    (coh.PL_' || p_criteria || ' = 1 OR coh.DX_' || p_criteria || ' = 1) 
    AND 
            (REGEXP_LIKE(dep.specialty,''' || p_dept || ''',''i'') 
            OR 
            REGEXP_LIKE(prv.primary_specialty,''' || p_dept || ''',''i'') 
            ) 
    and enc.enc_type_c = 101 
    AND enc.EFFECTIVE_DATE_DT between sysdate - (365.25 * '|| p_years ||' ) AND sysdate
    )';
 EXECUTE IMMEDIATE q1;
end;


--------------------------------------
--apply visit to departments criterion (oncology and nephrology)
--------------------------------------
create or replace procedure P_ACP_DEPT_VISIT_NEPH(p_cohort_table in varchar2, p_dept in varchar2, p_years in number, p_criteria in varchar2) as
 q1 varchar2(4000);
begin
 q1 := 'UPDATE ' || p_cohort_table  || ' 
  SET ' || p_dept || '_VISIT = 1  
  WHERE  
    SELECTED IS NULL
    AND PAT_ID IN ( 
                SELECT DISTINCT  coh.PAT_ID 
FROM ' || p_cohort_table  || '          coh 
JOIN clarity.PAT_ENC                            enc on coh.pat_id = enc.pat_id 
LEFT JOIN clarity.CLARITY_DEP                   dep ON enc.department_id = dep.department_id 
LEFT JOIN clarity.v_cube_d_provider             prv ON enc.visit_prov_id = prv.provider_id 
WHERE 
    (coh.PL_' || p_criteria || ' = 1 OR coh.DX_' || p_criteria || ' = 1) 
    AND 
            (REGEXP_LIKE(dep.specialty,''' || p_dept || ''',''i'') 
            OR 
            REGEXP_LIKE(prv.primary_specialty,''' || p_dept || ''',''i'') 
            ) 
    AND enc.EFFECTIVE_DATE_DT between sysdate - (365.25 * '|| p_years ||' ) AND sysdate
    )';
 EXECUTE IMMEDIATE q1;
end;

--------------------------------------
--apply admision for certain conditions (CHF AND COPD)
--------------------------------------
create or replace procedure P_ACP_DEPT_ADMIT(p_cohort_table in varchar2, p_driver_table in varchar2, p_years in number, p_criteria in varchar2) as
 q1 varchar2(4000);
begin
 q1 := 'UPDATE ' || p_cohort_table  || ' 
  SET ' || p_criteria || '_ADMIT = 1 
  WHERE 
    SELECTED IS NULL
    AND PAT_ID IN ( 
                SELECT DISTINCT  coh.PAT_ID 
                FROM ' || p_cohort_table  || '          coh 
                JOIN pat_enc_hsp                     enc ON coh.pat_id = enc.pat_id 
                JOIN pat_enc_dx                      dx ON enc.pat_enc_csn_id = dx.pat_enc_csn_id 
                join ' || p_driver_table ||'  drv on dx.dx_id = drv.dx_id AND drv.DX_FLAG = ''' || p_criteria || ''' 
                WHERE 
                    (coh.PL_' || p_criteria || ' = 1 OR COH.DX_' || p_criteria || ' = 1) 
                    AND dx.contact_date between sysdate - (365.25 * '|| p_years ||' ) AND sysdate
                    )';
 EXECUTE IMMEDIATE q1;
end;

--------------------------------------
-- MELD: pull labs
--------------------------------------
create or replace procedure P_ACP_LAB_PULL(p_table_name in varchar2, p_cohort_table in varchar2, p_driver_table  in varchar2, p_timeframe in number) as
 q1 varchar2(6000);
 q2 varchar2(4000);
begin

 q1 := 'INSERT INTO ' || p_table_name || '(PAT_ID,PAT_ENC_CSN_ID,PROC_CODE,COMPONENT_ID, RESULT_TIME, LAB_FLAG, HARM_NUM_VAL) 
     SELECT 	DISTINCT coh.pat_id, 
                o.pat_enc_csn_id, 
                p.proc_code, 
                o.component_id, 
                p.result_time, 
                drv.LAB_CATEGORY as LAB_FLAG, 
                CASE WHEN REGEXP_LIKE(o.ord_value,'':'',''i'') or REGEXP_SUBSTR(o.ord_value,''[1-9]\d*(\.\,\d+)?'') IS NULL 
                       THEN o.ord_num_value 
                  WHEN REGEXP_LIKE(o.ord_value,''[<>]=*'',''i'') 
                       THEN TO_NUMBER(REGEXP_SUBSTR(o.ord_value,''-?[[:digit:],.]*$''),''9999999999D9999999999'', ''NLS_NUMERIC_CHARACTERS = ''''.,'''''' ) 
                  WHEN REGEXP_LIKE(o.ord_value,''%'',''i'')  
                       THEN TO_NUMBER(REGEXP_SUBSTR(o.ord_value,''[1-9]\d*(\.\,\d+)?''),''9999999999D9999999999'', ''NLS_NUMERIC_CHARACTERS = ''''.,'''''' )   
                  ELSE o.ord_num_value END as harm_num_val                       
      FROM order_results                o 
      JOIN order_proc                   p   ON p.order_proc_id = o.order_proc_id 
      JOIN ' || p_cohort_table  || '    coh ON p.pat_id = coh.pat_id AND (coh.PL_CIRRHOSIS = 1 OR COH.DX_CIRRHOSIS = 1) AND coh.SELECTED IS NULL
      JOIN ' || p_driver_table  || '    drv ON p.proc_id = drv.proc_id and o.component_id = drv.component_id 
      JOIN order_proc_2                 op2 ON p.ORDER_PROC_ID = op2.ORDER_PROC_ID  
      JOIN clarity_component            cc  ON o.component_id = cc.component_id 
      LEFT JOIN lnc_db_main             ldm ON cc.DEFAULT_LNC_ID = ldm.record_id  
      WHERE  
              p.order_type_c IN (7) 
              AND o.ord_value IS NOT NULL 
              AND o.order_proc_id IS NOT NULL 
              AND p.order_time BETWEEN SYSDATE - (365.25 * ' || p_timeframe || ') AND SYSDATE';

q2 := 'CREATE INDEX ' || p_table_name || '_IX_RSLT_FLAG ON ' || p_table_name || '(result_time,LAB_FLAG)';

EXECUTE IMMEDIATE q1;
EXECUTE IMMEDIATE q2;

end;

--------------------------------------
-- MELD: processed labs
--------------------------------------
create or replace procedure P_ACP_LAB_MELD_TABLE( p_lab_table in varchar2, p_meld_table in varchar2) as
 q1 varchar2(8000);

begin
q1 :=  'INSERT INTO ' || p_meld_table  || ' (PAT_ID,ALBUMIN,ALBUMIN_RESULT_TIME,BILIRUBIN,BILIRUBIN_RESULT_TIME,CREATININE,CREATININE_RESULT_TIME,INR,INR_RESULT_TIME,LATEST_LAB,SODIUM,SODIUM_RESULT_TIME)
select pat_id
        ,ALBUMIN
        ,ALBUMIN_RESULT_TIME
        ,BILIRUBIN
        ,BILIRUBIN_RESULT_TIME
        ,CREATININE
        ,CREATININE_RESULT_TIME
        ,INR
        ,INR_RESULT_TIME
        ,LATEST_LAB
        ,SODIUM
        ,SODIUM_RESULT_TIME
from (
        select pat_id
                ,ALBUMIN
                ,ALBUMIN_RESULT_TIME
                ,MIN(ABS(LATEST_LAB - ALBUMIN_RESULT_TIME)) OVER (partition by pat_id) as last_albumin
                ,ABS(LATEST_LAB - ALBUMIN_RESULT_TIME) as DIFF_ALBUMIN
                ,BILIRUBIN
                ,BILIRUBIN_RESULT_TIME
                ,CREATININE
                ,CREATININE_RESULT_TIME
                ,MIN(ABS(LATEST_LAB - CREATININE_RESULT_TIME)) OVER (partition by pat_id) as last_creatinine
                ,ABS(LATEST_LAB - CREATININE_RESULT_TIME) as DIFF_CREATININE
                ,INR
                ,INR_RESULT_TIME
                ,MIN(ABS(LATEST_LAB - INR_RESULT_TIME)) OVER (partition by pat_id) as last_inr
                ,ABS(LATEST_LAB - INR_RESULT_TIME) as DIFF_INR
                ,LATEST_LAB
                ,SODIUM
                ,SODIUM_RESULT_TIME
                ,MIN(ABS(LATEST_LAB - SODIUM_RESULT_TIME)) OVER (partition by pat_id) as last_sodium
                ,ABS(LATEST_LAB - SODIUM_RESULT_TIME) as DIFF_SODIUM
        from (select * from (
            select DISTINCT x.PAT_ID
                                ,x.BILIRUBIN
                                ,x.BILIRUBIN_result_time
                                ,x.INR
                                ,x.INR_result_time
                                ,x.diff_INR
                                ,x.ALBUMIN
                                ,x.ALBUMIN_result_time
                                ,x.diff_ALBUMIN
                                ,x.CREATININE
                                ,x.CREATININE_result_time
                                ,x.diff_creatinine
                                ,x.SODIUM
                                ,x.SODIUM_result_time
                                ,x.diff_SODIUM
                                ,MAX(x.BILIRUBIN_result_time) OVER (PARTITION BY x.PAT_ID) AS LATEST_LAB
             from (
                     SELECT DISTINCT bili.PAT_ID
                                        ,bili.result_time as BILIRUBIN_result_time
                                        ,bili.harm_num_val as BILIRUBIN
                                        ,inr.INR
                                        ,inr.INR_result_time
                                        ,ABS(bili.result_time - inr.INR_result_time) as diff_INR
                                        ,alb.ALBUMIN
                                        ,alb.ALBUMIN_result_time
                                        ,ABS(bili.result_time - alb.ALBUMIN_result_time) as diff_ALBUMIN
                                        ,cr.CREATININE
                                        ,cr.CREATININE_result_time
                                        ,ABS(bili.result_time - cr.CREATININE_result_time) as diff_creatinine
                                        ,sod.SODIUM
                                        ,sod.SODIUM_result_time
                                        ,ABS(bili.result_time - sod.SODIUM_result_time) as diff_sodium
                                    FROM ' || p_lab_table || ' bili
                                    JOIN (SELECT DISTINCT lab.PAT_ID
                                                ,lab.result_time as INR_result_time
                                                ,lab.harm_num_val as INR
                                            FROM ' || p_lab_table || ' lab
                                            WHERE LAB.LAB_FLAG = ''INR'' AND lab.harm_num_val <> 9999999) inr on bili.pat_id = inr.pat_id and (bili.result_time - inr.INR_result_time) between -1 and 1
                                    JOIN (SELECT DISTINCT lab.PAT_ID
                                                ,lab.result_time as ALBUMIN_result_time
                                                ,lab.harm_num_val as ALBUMIN
                                            FROM ' || p_lab_table || ' lab
                                            WHERE LAB.LAB_FLAG = ''ALBUMIN'' AND lab.harm_num_val <> 9999999) alb on bili.pat_id = alb.pat_id and (bili.result_time - alb.ALBUMIN_result_time) between -1 and 1
                                    JOIN (SELECT DISTINCT lab.PAT_ID
                                                ,lab.result_time as CREATININE_result_time
                                                ,lab.harm_num_val as CREATININE
                                            FROM ' || p_lab_table || ' lab
                                            WHERE LAB.LAB_FLAG = ''CREATININE'' AND lab.harm_num_val <> 9999999) cr on bili.pat_id = cr.pat_id and (bili.result_time - cr.CREATININE_result_time) between -1 and 1                        
                                    JOIN (SELECT DISTINCT lab.PAT_ID
                                                ,lab.result_time as SODIUM_result_time
                                                ,lab.harm_num_val as SODIUM
                                            FROM ' || p_lab_table || ' lab
                                            WHERE LAB.LAB_FLAG = ''SODIUM'' AND lab.harm_num_val <> 9999999) sod on bili.pat_id = sod.pat_id and (bili.result_time - sod.SODIUM_result_time) between -1 and 1                        
                                    WHERE bili.LAB_FLAG = ''BILIRUBIN'' AND bili.harm_num_val <> 9999999                
                            ) x
                            )
                            where LATEST_LAB = BILIRUBIN_result_time
                            )
        )x
where 
diff_inr = last_inr
and diff_sodium = last_sodium
and diff_albumin = last_albumin
and diff_creatinine = last_creatinine';
EXECUTE IMMEDIATE q1; 
end;

--------------------------------------
-- MELD: apply MELD criteria
--------------------------------------
create or replace procedure P_ACP_MELD(p_cohort_table in varchar2, p_lab_table in varchar2) as
 q1 varchar2(4000);
begin

 q1 := 'UPDATE ' || p_cohort_table  || 
  ' SET MELD = 1 
  WHERE  
    SELECTED IS NULL
    AND PAT_ID IN ( 
                    select DISTINCT pat_id 
                    from ( 
                            select pat_id 
                                    ,round( 
                                    ( 
                                        (0.378 * ln(Bilirubin)) + (1.120 * ln(INR)) + ((0.957 * ln(Creatinine)) + 0.643) 
                                    ) * 10 
                                    ,1) as meld 
                                ,sodium 
                                ,Bilirubin 
                                ,creatinine 
                                ,inr 
                    from( 
                        select  
                                labs.pat_id 
                                ,labs.Bilirubin 
                                ,labs.INR 
                                ,case when labs.Creatinine > 4.0 or dia.pat_id is not null then 4.0 
                                    else labs.Creatinine 
                                    end Creatinine                 
                                ,case when labs.sodium > 137 then 137 
                                    when labs.sodium < 125 then 125 
                                    else labs.sodium 
                                    end sodium 
                        from xdr_acp_cohort     coh 
                        JOIN  ' || p_lab_table || '                   LABS ON COH.PAT_ID = LABS.PAT_ID 
                        left join (select pat_id, CREATININE_result_time 
                                    from ( 
                                        select lab.pat_id 
                                                ,lab.CREATININE_result_time 
                                                ,count(dia.contact_date) dialysis_count 
                                        from  ' || p_lab_table || '   lab 
                                        join  (SELECT DIAL.* 
                                                FROM PT_DIALYSIS_HX                 dial 
                                                JOIN  '|| p_cohort_table  ||'     coh ON dial.pat_id = coh.pat_id  
                                                                                    AND (coh.PL_CIRRHOSIS = 1 OR COH.DX_CIRRHOSIS = 1) 
                                                )          dia  on lab.pat_id = dia.pat_id  
                                                                and dia.CONTACT_DATE between lab.CREATININE_result_time - 7  and lab.CREATININE_result_time   
                                        group by lab.pat_id,lab.CREATININE_result_time 
                                        ) 
                        where dialysis_count >= 2)        dia on labs.pat_id = dia.pat_id and labs.CREATININE_RESULT_TIME = dia.CREATININE_RESULT_TIME 
                        ) 
            ) 
where meld + 1.32 * (137 - sodium) - (0.033 * meld * (137 - sodium)) > 19) ';
 EXECUTE IMMEDIATE q1;
end;

--------------------------------------
--Chemotherapy Procedures (CPT)
--------------------------------------
create or replace procedure P_ACP_CHEMO_PROC(p_cohort_table in varchar2, p_driver_table  in varchar2, p_timeframe in number) as
 q1 varchar2(4000);

begin
 q1 := 'UPDATE ' || p_cohort_table  || ' 
  SET CHEMO = 1  
  WHERE  
    SELECTED IS NULL
    AND PAT_ID IN (      
        SELECT coh.pat_id 
          FROM ' || p_cohort_table  || '           coh 
          JOIN pat_enc                  enc on coh.pat_id = enc.pat_id 
          JOIN arpb_transactions                  cpt  ON enc.pat_enc_csn_id = cpt.pat_enc_csn_id  
          join ' || p_driver_table  || '                  drv on cpt.cpt_code = drv.cpt_code 
        WHERE 
            (coh.PL_CANCER = 1 OR COH.DX_CANCER = 1) 
            AND TRUNC(enc.EFFECTIVE_DATE_DT ) BETWEEN sysdate - (365.25 * ' || p_timeframe || ') AND sysdate 
        UNION 
        SELECT coh.pat_id 
          FROM ' || p_cohort_table  || '          coh 
          join hsp_account                     acc on coh.pat_id = acc.pat_id  
          JOIN HSP_TRANSACTIONS                  tx  ON acc.HSP_ACCOUNT_ID = tx.HSP_ACCOUNT_ID  
          JOIN pat_enc                          enc on tx.pat_enc_csn_id = enc.pat_enc_csn_id 
          join ' || p_driver_table  || '                  drv on tx.cpt_code = drv.cpt_code 
        WHERE 
            (coh.PL_CANCER = 1 OR COH.DX_CANCER = 1) 
            AND TRUNC(enc.EFFECTIVE_DATE_DT ) BETWEEN sysdate - (365.25 * ' || p_timeframe || ') AND sysdate)';


EXECUTE IMMEDIATE q1; 
EXECUTE IMMEDIATE 'COMMIT';  
end;

--------------------------------------
-- Chemotherapy Medications
--------------------------------------
create or replace procedure P_ACP_CHEMO_MEDS(p_cohort_table in varchar2, p_med_keyword  in varchar2, p_timeframe in number) as
 q1 varchar2(4000);

begin
 q1 := 'UPDATE ' || p_cohort_table  || ' 
  SET CHEMO = 1  
  WHERE  
    SELECTED IS NULL
    AND PAT_ID IN (      
        SELECT DISTINCT  med1.pat_id 
        FROM ( 
        SELECT  m.pat_id, 
            m.order_med_id,  
          case when m.medication_id != 800001 then m.medication_id 
               else coalesce(omi.dispensable_med_id, m.user_sel_med_id) end as used_med_id,        
            zom.name as ordering_mode, 
            zoc.name as order_class 
        FROM ' || p_cohort_table  || '      coh 
        JOIN order_med                      m   ON coh.pat_id = m.pat_id 
        LEFT JOIN order_medinfo omi on m.order_med_id = omi.order_med_id 
        left join zc_order_class zoc on m.order_class_C = zoc.order_class_c 
        left join zc_ordering_mode zom on m.ordering_mode_c = zom.ordering_mode_c 
        WHERE  
            coh.SELECTED IS NULL
            AND (coh.PL_CANCER = 1 OR COH.DX_CANCER = 1) 
            AND TRUNC(m.ordering_date) BETWEEN sysdate - (365.25 * ' || p_timeframe ||') AND sysdate 
            and zoc.name <> ''Historical Med'' 
    ) med1 
LEFT JOIN clarity_medication cm on med1.used_med_id = cm.medication_id 
LEFT JOIN mar_admin_info  mar   ON med1.order_med_id = mar.order_med_id 
LEFT JOIN zc_mar_rslt     xmrs  ON mar.mar_action_c = xmrs.result_c 
WHERE 
  (
  (med1.ordering_mode = ''Inpatient''                                       
            AND nvl(mar.taken_time,to_date(''01/01/0001'')) <> ''01/01/0001''       -- taken_time was valid
            AND nvl(mar.sig,-1) > 0                                             -- and SIG was valid and > 0
            AND nvl(mar.mar_action_c,-1) <> 125                                 -- and action was anything other than ''Not Given''
         ) 
         OR med1.ordering_mode != ''Inpatient'' 
        )
    AND med1.used_med_id IS NOT NULL 
    AND (
        cm.pharm_subclass_c in (2150)  
        or regexp_like(cm.name,''' || p_med_keyword || ''',''i'') 
        or regexp_like(cm.generic_name,''' || p_med_keyword || ''',''i'') 
    )
    )';

EXECUTE IMMEDIATE q1; 
EXECUTE IMMEDIATE 'COMMIT';  
end;

--------------------------------------
-- EJECTION FRACTION
--------------------------------------
create or replace procedure P_ACP_EF_NARR(p_table_name in varchar2, p_cohort_table in varchar2, p_timeframe in number) as
 q1 varchar2(6000);
begin

 q1 := 'INSERT INTO ' || p_table_name || '(PAT_ID,ACC_NUM,ORDER_PROC_ID,NARR_LINE, NARR_NARRATIVE, ORDER_TIME, ORD_VALUE) 
   SELECT DISTINCT opr.pat_id 
               ,opr.acc_num 
               ,opr.order_proc_id 
               ,nar.line           AS narr_line 
               ,nar.narrative      AS narr_narrative 
		   ,order_time 
		   ,ord_value 
  FROM (SELECT DISTINCT coh.pat_id 
               ,opr.order_proc_id 
               ,opr.order_time 
                ,acc.acc_num 
               ,res.line 
               ,res.ord_value 
  FROM ' || p_cohort_table || '                    coh 
  JOIN order_proc               		opr ON coh.pat_id = opr.pat_id 
  LEFT JOIN order_results       res ON opr.order_proc_id = res.order_proc_id 
  LEFT JOIN order_rad_acc_num   acc ON opr.order_proc_id = acc.order_proc_id 
  WHERE  
  		(coh.pl_chf = 1 or coh.dx_chf = 1) 
        AND coh.SELECTED IS NULL 
        AND opr.order_status_c = 5                     				
        AND OPR.ORDER_TYPE_C = 29 
		AND opr.result_time between SYSDATE - (365.25 * ' || p_timeframe || ') AND SYSDATE)                      opr 
  JOIN order_narrative  nar ON opr.order_proc_id = nar.order_proc_id 
  WHERE trim(nar.narrative) IS NOT NULL';

EXECUTE IMMEDIATE q1;

end;


 create or replace procedure P_ACP_EF_FLAG(p_cohort_table in varchar2, p_narr_table in varchar2) as
 q1 varchar2(4000);

begin
 q1 := 'UPDATE ' || p_cohort_table  || ' 
  SET EF = 1  
  WHERE  
    SELECTED IS NULL
    AND PAT_ID IN ( 
    SELECT distinct PAT_ID 
 from ( 
 SELECT PAT_ID 
		        ,ORDER_PROC_ID 
		        ,ORDER_TIME 
		        ,CASE 
				WHEN 
					ORD_VALUE IS NULL 
				THEN TEST_VALUES 
				ELSE (CASE 
						WHEN	REGEXP_LIKE ( ORD_VALUE	,''\+.\-'',''i'' ) 
						THEN TO_CHAR(TO_NUMBER(REGEXP_SUBSTR(ORD_VALUE,''[1-9]\d*(\.\,\d+)?''),''9999999999D9999999999'',''NLS_NUMERIC_CHARACTERS = ''''.,'''''') - 5) 
						ELSE COALESCE(REGEXP_SUBSTR(ORD_VALUE,''[1-9]\d*(\.\,\d+)?''),REGEXP_SUBSTR(ORD_VALUE,''?[[:digit:],.]*$'') ) 
					END)END AS LVEF_FINAL_VALUE 
		        ,TEST_VALUES NARR_VALUE 
		        ,ORD_VALUE 
		        ,NARR_AGG 
		    FROM  ( 
			SELECT PAT_ID 
			      ,ORDER_PROC_ID 
			      ,ORDER_TIME 
			      ,ORD_VALUE 
			      ,TRIM(	CASE 
					WHEN 
						REGEXP_LIKE(SUBSTR(NARR_AGG,REGEXP_INSTR(LOWER(NARR_AGG),''\d++.(to|-).\d++.(|^%)'',5),8),''(to|-)'',''i'') 
					THEN SUBSTR(NARR_AGG,REGEXP_INSTR(LOWER(NARR_AGG),''\d++.(to|-).\d++.(|^%)'',5),2) 
					ELSE SUBSTR(NARR_AGG,REGEXP_INSTR(LOWER(NARR_AGG),''\d++.(|^%)'',5),2) 
				END) AS TEST_VALUES 
			      ,NARR_AGG 
			  FROM (SELECT LVEF.PAT_ID 
		      ,LVEF.ORDER_PROC_ID 
		      ,LVEF.ACC_NUM 
		      ,LVEF.ORDER_TIME 
		      ,LVEF.ORD_VALUE 
		      ,LISTAGG(NARR.NARR_LINE 
		                  || ''|'' 
		                  || NARR.NARR_NARRATIVE,'' || '') WITHIN  GROUP(			 ORDER BY NARR.NARR_LINE		) NARR_AGG 
		  FROM (SELECT PAT_ID 
		      ,ACC_NUM 
		      ,ORDER_PROC_ID 
		      ,NARR_LINE 
		      ,ORDER_TIME 
		      ,ORD_VALUE 
		      ,NARR_NARRATIVE 
		  FROM ' || p_narr_table || '
		 WHERE (			LOWER(NARR_NARRATIVE) LIKE ''%ejection%'' 
			    OR UPPER(NARR_NARRATIVE) LIKE ''%LVEF%'' 
			    OR LOWER(NARR_NARRATIVE) LIKE ''%fraction%'')) LVEF 
          JOIN ' || p_narr_table || ' NARR ON LVEF.ORDER_PROC_ID = NARR.ORDER_PROC_ID  
		  							AND NARR.NARR_LINE  BETWEEN LVEF.NARR_LINE and LVEF.NARR_LINE  + 1 
		 GROUP BY LVEF.PAT_ID 
		      ,LVEF.ORDER_PROC_ID 
		      ,LVEF.ACC_NUM 
		      ,LVEF.ORDER_TIME 
		      ,LVEF.ORD_VALUE) 
		)) 
            WHERE LVEF_FINAL_VALUE in (''1'',''2'',''3'',''4'',''5'',''6'',''7'',''8'',''9'',''10'',''11'',''12'',''13'',''14'',''15'',''16'',''17'',''18'',''19'',''20'',''21'',''22'',''23'',''24'',''25'',''26'',''27'',''28'',''29'',''30'',''31''))';  
                            
EXECUTE IMMEDIATE q1; 
end;
--------------------------------------
-- Merge criterion
--------------------------------------
create or replace procedure P_ACP_MERGE_CRITERION(p_cohort_table in varchar2) as
 q1 varchar2(4000);
 q2 varchar2(4000);
 q3 varchar2(4000);
 q4 varchar2(4000);
 q5 varchar2(4000);
 q6 varchar2(4000);

begin
 q1 := 'UPDATE ' || p_cohort_table  || ' 
  SET ALS = 1  ,SELECTED = 1 
  WHERE  
    (PL_ALS = 1 AND DX_ALS = 1)';

 q2 := 'UPDATE ' || p_cohort_table  || ' 
  SET CANCER = 1  ,SELECTED = 1 
  WHERE  
    (PL_CANCER = 1 AND ONC_VISIT = 1)
    OR
    (DX_CANCER = 1 AND CHEMO = 1)'
    ;

q3 := 'UPDATE ' || p_cohort_table  || ' 
  SET CHF = 1 ,SELECTED = 1 
  WHERE  
        ((PL_CHF = 1 OR DX_CHF = 1) AND EF = 1)
        OR
        (PL_CHF = 1  AND CHF_ADMIT = 1)'
    ;

q4 := 'UPDATE ' || p_cohort_table  || ' 
  SET COPD = 1  ,SELECTED = 1 
  WHERE  
        (PL_COPD = 1 AND COPD_ADMIT = 1)'
    ;

q5 := 'UPDATE ' || p_cohort_table  || ' 
  SET ESLD = 1 ,SELECTED = 1  
  WHERE  
        PL_CIRRHOSIS = 1 
        AND 
        (PL_ESDL_DECOMPENSATION = 1
        OR dx_ESDL_decompensation = 1
        OR MELD = 1)'
    ;

q6 := 'UPDATE ' || p_cohort_table  || ' 
  SET ESRD = 1 ,SELECTED = 1 
  WHERE  
        (
            (PL_ESRD = 1 OR DX_ESRD = 1 )
        AND NEPH_VISIT = 1
        )
        OR
        (PL_ESRD = 1 AND DX_ESRD = 1 )'
    ;
EXECUTE IMMEDIATE q1; 
EXECUTE IMMEDIATE 'COMMIT';  
EXECUTE IMMEDIATE q2; 
EXECUTE IMMEDIATE 'COMMIT';  
EXECUTE IMMEDIATE q3; 
EXECUTE IMMEDIATE 'COMMIT';  
EXECUTE IMMEDIATE q4; 
EXECUTE IMMEDIATE 'COMMIT'; 
EXECUTE IMMEDIATE q5; 
EXECUTE IMMEDIATE 'COMMIT'; 
EXECUTE IMMEDIATE q6; 
EXECUTE IMMEDIATE 'COMMIT'; 

end;

--------------------------------------
-- Age criteria
--------------------------------------
create or replace procedure P_ACP_AGE_CRTIERIA(p_cohort_table in varchar2, p_age_limit in varchar2) as
 q1 varchar2(4000);
begin

 q1 := 'UPDATE ' || p_table_name  || ' 
        SET AGE = 1, selected = 1
        WHERE 
            SELECTED IS NULL
            AND (pl_copd IS NOT NULL
            OR pl_chf IS NOT NULL 
            OR PL_ESRD IS NOT NULL
            OR PL_ALS IS NOT NULL 
            OR PL_CANCER IS NOT NULL)
            and CURRENT_AGE >= ' || p_age_limit || '';
EXECUTE IMMEDIATE q1;
end; 

--------------------------------------
--remove patient not selected
--------------------------------------
create or replace procedure p_acp_remove_not_selected(p_cohort_table in varchar2) as
 q1 varchar2(4000);
begin

 q1 := 'DELETE FROM ' || p_cohort_table  ||
        ' WHERE 
            SELECTED IS NULL
';
 EXECUTE IMMEDIATE q1;
end;

--------------------------------------
--AD-POLST
--------------------------------------
create or replace procedure P_ACP_ADPOLST(p_cohort_table in varchar2, p_driver_adpolst in varchar2, p_driver_record_stat in varchar2, p_driver_doc_stat in varchar2) as
 q1 varchar2(4000);
begin
 q1 :=  'MERGE INTO ' || p_cohort_table ||' coh 
 USING ( 
SELECT DISTINCT PAT_ID 
            ,CASE WHEN POLST_ALL = 0 OR POLST_ALL IS NULL THEN 0 ELSE 1 END POLST_ALL 
            ,CASE WHEN AD_ALL = 0 OR AD_ALL IS NULL THEN 0 ELSE 1 END AD_ALL 
            ,CASE WHEN POLST_THREE = 0 OR POLST_THREE IS NULL THEN 0 ELSE 1 END POLST_THREE 
            ,CASE WHEN AD_THREE = 0 OR AD_THREE IS NULL THEN 0 ELSE 1 END AD_THREE 
FROM ( 
        SELECT PAT_ID 
                ,SUM(POLST_ALL) AS POLST_ALL 
                ,SUM(AD_ALL) AS AD_ALL 
                ,SUM(POLST_THREE) AS POLST_THREE 
                ,SUM(AD_THREE) AS AD_THREE 
        FROM ( 
                SELECT DISTINCT PAT_ID 
                        ,CASE WHEN DOC_GROUP = ''POLST'' THEN 1 ELSE 0 END POLST_ALL 
                        ,CASE WHEN DOC_GROUP  = ''AD'' THEN 1 ELSE 0 END AD_ALL 
                        ,CASE WHEN DOC_GROUP = ''POLST'' and three_year_ad_polst = 1 THEN 1 ELSE 0 END POLST_THREE 
                        ,CASE WHEN DOC_GROUP  = ''AD'' and three_year_ad_polst = 1 THEN 1 ELSE 0 END AD_THREE 
                FROM (SELECT distinct coh.pat_id 
                                ,bb.doc_info_id 
                                ,bb.SCAN_FILE 
                                ,BT.DOC_GROUP 
                                ,case when bb.doc_recv_time between sysdate - (365.25 *3 ) AND sysdate then 1 else 0 end three_year_ad_polst 
                        FROM ' || p_cohort_table ||'          COH   
                        join DOC_INFORMATION                    BB on coh.PAT_ID = BB.DOC_PT_ID 
                        join ' || p_driver_adpolst || '        BT on BB.DOC_INFO_TYPE_C = BT.DOC_INFO_TYPE_C 
                        WHERE  
                            coh.SELECTED IS NULL
                            AND BB.IS_SCANNED_YN = ''Y''  
                            -- We noticed that in the case of AD-POLST documents, there were instances where the docs had been deleted 
                            and ( 
                                bb.RECORD_STATE_C IS NULL 
                                OR bb.RECORD_STATE_C not in (SELECT RECORD_STATE_C FROM ' || p_driver_record_stat || ') 
                                )-- Deleted 
                            and ( 
                                bb.DOC_STAT_C IS NULL 
                                OR bb.DOC_STAT_C NOT IN (SELECT DOC_STAT_C FROM ' || p_driver_doc_stat || ') 
                                )-- Error 
                            and bb.DOC_REVOK_DT is null) 
                ) 
            GROUP BY PAT_ID 
    ) 
 ) R
 ON(COH.PAT_ID = R.PAT_ID) 
 WHEN MATCHED THEN 
 UPDATE SET  
 coh.AD_ALL = r.AD_ALL 
 ,coh.AD_THREE = r.AD_THREE 
 ,coh.POLST_ALL = r.POLST_ALL 
 ,coh.POLST_THREE = r.POLST_THREE';

EXECUTE IMMEDIATE q1;
end;

--------------------------------------
---- Clinic attribution: clinic where last seen by PCP
--------------------------------------
create or replace procedure P_ACP_loc_last_pcp(p_cohort_table in varchar2, p_driver_dept in varchar2, p_driver_appt_type in varchar2, p_driver_appt_status in varchar2) as
 q1 varchar2(4000);
begin
 q1 := 'MERGE INTO ' || p_cohort_table  || ' coh 
USING ( 
SELECT DISTINCT PAT_ID 
        ,LOC_ID 
FROM (SELECT DISTINCT PAT_ID 
        ,LOC_ID 
        ,rank() over( 
                    partition by pat_id  
                    order by pat_id, contact_date desc 
                    ) ranking 
    FROM (SELECT distinct coh.PAT_ID 
                    ,enc.PAT_ENC_CSN_ID 
                    ,enc.EFFECTIVE_DATE_DT as contact_date 
                    ,coh.CUR_PCP_PROV_ID  
                    ,enc.VISIT_PROV_ID 
                    ,case when coh.CUR_PCP_PROV_ID =  enc.VISIT_PROV_ID then 1 else 0 end pcp_visit_yn 
                    ,enc.department_id 
                    ,loc.loc_id 
            FROM ' || p_cohort_table  || '         coh 
            join pat_enc                enc ON coh.PAT_ID = enc.PAT_ID 
            JOIN ' || p_driver_dept || '       dep on enc.DEPARTMENT_ID = dep.department_id 
            left join clarity_dep dep2 on dep.department_id = dep2.department_id 
            left join clarity_loc loc on dep2.rev_loc_id = loc.loc_id 
            join ' || p_driver_appt_type || '      apt on enc.APPT_PRC_ID = apt.prc_id 
            where  
                    coh.SELECTED IS NULL
                    AND enc.effective_date_dt between sysdate - 366 and sysdate  
                    and enc.enc_type_c = 101 
                    and (enc.appt_status_c is not null and enc.appt_status_c not in (SELECT APPT_STATUS_C 
                                                                                            FROM ' || p_driver_appt_status || '
                                                                                            WHERE APPT_CAT = ''exclude'' )
                )
            ) 
    WHERE 
        pcp_visit_yn = 1 
        --add exclusion for emergency depts 
        and department_id not in (      --Exclude Emergency Care 
                                    ''70011''       --	SMBP WILSHIRE UC 
                                        ,''80008''        --	SMBP MARINA DL REY UC 
                                        --Exclude 1223 16th street 3100 
                                        ,''70232''            --	GERI SM 3100 
                                        --Exclude SMBP 1090 
                                        ,''70216''            --SMBP 10TH FL 1090   
                                        --exclude WW COMP HLTH STE 525 
                                        ,''60155''            --	IM CHP MP1 525 
                                        --WLV EAST WEST CENTER 
                                        ,''80044''            --	IM EAST WEST MED WLV 
                                        ,''80106''            --	PET CT IMG WESTLAKE  
                                        --UCLA Health Torrance Specialty Care 
                                        ,''80273''            --	EAST WEST TORR STE 302 
                                ) 
    ) 
WHERE    ranking = 1 
)r 
ON 
(COH.PAT_ID = R.PAT_ID) 
WHEN MATCHED THEN 
UPDATE SET coh.CLINIC_LAST_PCP = r.LOC_ID'; 

EXECUTE IMMEDIATE q1;
end;

--------------------------------------
-- Clinic attribution: clinic with the most visits
--------------------------------------
create or replace procedure P_ACP_loc_most_visits(p_cohort_table in varchar2, p_driver_dept in varchar2, p_driver_appt_type in varchar2, p_driver_appt_status in varchar2) as
 q1 varchar2(4000);
begin
 q1 := 'MERGE INTO ' || p_cohort_table  || ' coh 
USING ( 
SELECT DISTINCT PAT_ID
        ,LOC_ID
FROM (SELECT DISTINCT PAT_ID
        ,LOC_ID
        ,rank() over(
                    partition by pat_id 
                    order by pat_id, ENC_COUNT desc, last_visit DESC,PCP_VISIT_YN
                    ) ranking
--,MAX(contact_date) OVER (PARTITION BY pat_id, LOC_ID) AS last_visit
FROM (SELECT coh.PAT_ID
            ,loc.LOC_ID
            ,case when coh.CUR_PCP_PROV_ID =  enc.VISIT_PROV_ID then 1 else 0 end pcp_visit_yn 
            ,max(enc.effective_date_dt) over (partition by coh.pat_id, loc.LOC_ID) as last_visit
            ,count(enc.pat_enc_csn_id) over (partition by coh.pat_id, loc.LOC_ID) as ENC_COUNT
            FROM ' || p_cohort_table  || '         coh 
            join pat_enc                enc ON coh.PAT_ID = enc.PAT_ID 
            JOIN ' || p_driver_dept || '       dep on enc.DEPARTMENT_ID = dep.department_id 
            left join clarity_dep dep2 on dep.department_id = dep2.department_id 
            left join clarity_loc loc on dep2.rev_loc_id = loc.loc_id 
            join ' || p_driver_appt_type || '      apt on enc.APPT_PRC_ID = apt.prc_id 
            where  
                    enc.effective_date_dt between sysdate - 366 and sysdate  
                    and enc.enc_type_c = 101 
                    and (enc.appt_status_c is not null and enc.appt_status_c not in (SELECT APPT_STATUS_C 
                                                                                            FROM ' || p_driver_appt_status || '
                                                                                            WHERE APPT_CAT = ''exclude'' )
                        and enc.department_id not in (      --Exclude Emergency Care 
                                    ''70011''       --	SMBP WILSHIRE UC 
                                        ,''80008''        --	SMBP MARINA DL REY UC 
                                        --Exclude 1223 16th street 3100 
                                        ,''70232''            --	GERI SM 3100 
                                        --Exclude SMBP 1090 
                                        ,''70216''            --SMBP 10TH FL 1090   
                                        --exclude WW COMP HLTH STE 525 
                                        ,''60155''            --	IM CHP MP1 525 
                                        --WLV EAST WEST CENTER 
                                        ,''80044''            --	IM EAST WEST MED WLV 
                                        ,''80106''            --	PET CT IMG WESTLAKE  
                                        --UCLA Health Torrance Specialty Care 
                                        ,''80273''            --	EAST WEST TORR STE 302 
                                ) 
                )
            ) 
    WHERE 
        pcp_visit_yn = 1 
        --add exclusion for emergency depts 

    ) 
WHERE    ranking = 1 
)r 
ON 
(COH.PAT_ID = R.PAT_ID) 
WHEN MATCHED THEN 
UPDATE SET coh.clinic_most_visits = r.LOC_ID'; 

EXECUTE IMMEDIATE q1;
end;

--------------------------------------
---- Clinic attribution: assing clinic
--------------------------------------
create or replace procedure P_ACP_CLINIC(p_cohort_table in varchar2) as
 q1 varchar2(4000);
begin

 q1 := 'update ' || p_cohort_table  || ' 
    set clinic_id = COALESCE(CLINIC_LAST_PCP,CLINIC_MOST_VISITS)';
EXECUTE IMMEDIATE q1;
end; 


--------------------------------------
---- Care Coordinator attribution
--------------------------------------
create or replace procedure P_ACP_COORDINATOR(p_cohort_table in varchar2, p_driver_table in varchar2) as
 q1 varchar2(4000);
begin

 q1 := 'merge into ' || p_cohort_table  || '  coh 
USING 
(SELECT distinct coh.pat_id 
            ,gr.coordinator_id 
FROM ' || p_cohort_table  || '  coh 
join ' || p_driver_table || '  gr on coh.clinic_id = gr.loc_id 
WHERE 
SELECTED IS NULL AND  
GR.LOC_ID NOT IN (
    -- clincis with +1 CCC
6016
,7083
,6017 
,7000)
) r
on
(coh.pat_id = r.pat_id)
when matched THEN
update SET coh.coordinator_id = r.coordinator_id';
EXECUTE IMMEDIATE q1;
end;
--------------------------------------
-- Intervention assignment
--------------------------------------
create or replace procedure p_acp_intervention_assignment(p_cohort_table in varchar2, p_driver_table in varchar2) as
 q1 varchar2(4000);
begin
 q1 := 'MERGE INTO ' || p_cohort_table || ' coh 
USING ( 
SELECT DISTINCT coh.pat_id 
               ,ran.arm
  FROM ' || p_cohort_table || '       coh 
  JOIN ' || p_driver_table || '       ran on coh.clinic_id = ran.clinic_id
  ) r 
  ON  
  (coh.pat_Id = r.pat_id) 
  WHEN MATCHED THEN 
  UPDATE SET coh.RANDOMIZATION_ARM = r.arm';
 EXECUTE IMMEDIATE q1;
end;
--------------------------------------
--upcoming PC appointment 
--------------------------------------
-- create or replace procedure P_ACP_APPOINTMENT(p_cohort_table in varchar2, p_driver_dept in varchar2, p_driver_appt_type in varchar2, p_driver_appt_status in varchar2) as
--  q1 varchar2(4000);
-- begin
--  q1 := 'MERGE INTO ' || p_cohort_table || ' coh 
-- USING ( 
-- SELECT * FROM ( 
-- SELECT DISTINCT coh.pat_id 
--                ,vsa.pat_enc_csn_id 
--                ,vsa.appt_dttm 
--                ,vsa.department_id 
--                ,vsa.department_name 
--                ,vsa.dept_specialty_c    
--                ,vsa.dept_specialty_name AS department_specialty 
--                ,vsa.loc_id            
--                ,vsa.loc_name 
--                ,vsa.prov_id 
--                ,vsa.prov_name_wid 
--                ,COH.CUR_PCP_PROV_ID 
--               ,case when COH.CUR_PCP_PROV_ID = vsa.prov_id then 1 else 0 end appt_pcp_yn 
--               ,rank() over( 
--                     partition by coh.pat_id  
--                     order by coh.pat_id, vsa.appt_dttm asc 
--                     ) ranking 
--   FROM ' || p_cohort_table || '                            coh 
--   JOIN v_sched_appt           vsa   ON coh.pat_id = vsa.pat_id 
--   JOIN ' || p_driver_dept || '       dep on vsa.DEPARTMENT_ID = dep.department_id 
--   join ' || p_driver_appt_type || '      apt   ON vsa.prc_id = apt.prc_id 
--   join ' || p_driver_appt_status || '    stt  ON vsa.appt_status_c = stt.APPT_STATUS_C AND stt.appt_cat = ''include'' 
--   WHERE vsa.appt_dttm > sysdate 
--   ) 
--   where ranking = 1 
--   ) r 
--   ON  
--   (coh.pat_Id = r.pat_id) 
--   WHEN MATCHED THEN 
--   UPDATE SET coh.APPOINTMENT_DATE = r.appt_dttm 
--   ,coh.APPOINTMENT_CSN = r.pat_enc_csn_id  
--   ,coh.UPDATE_DATE = sysdate';
--   EXECUTE IMMEDIATE q1;
-- end; 

--------------------------------------
-- Drop temp tables
--------------------------------------
create or replace procedure p_acp_clean_up(p_table_name in varchar2) as
 q1 varchar2(4000);
begin

 q1 := 'DROP TABLE ' || p_table_name  ||
        ' PURGE';
 EXECUTE IMMEDIATE q1;
end;


